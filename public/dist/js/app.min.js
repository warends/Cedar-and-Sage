'use strict';

var app = angular.module('cedar-and-sage', ['home', 'portfolio', 'services', 'common', 'curator', 'post', 'pricing', 'about.controller', 'landing-page.controller', 'ui.router', 'ngScrollReveal', 'ngSanitize', 'style-quiz']);

app.config(['$locationProvider', '$stateProvider', '$urlRouterProvider', function ($locationProvider, $stateProvider, $urlRouterProvider) {

    $urlRouterProvider.otherwise('/');
    $locationProvider.html5Mode(true);

    $stateProvider.state('home', {
        url: '/',
        templateUrl: '/uiViews/home',
        controller: 'HomeController'
    }).state('portfolio', {
        url: '/portfolio',
        templateUrl: '/uiViews/portfolio',
        controller: 'PortfolioController'
    }).state('services', {
        url: '/services',
        templateUrl: '/uiViews/services',
        controller: 'ServiceController'
    }).state('curator', {
        url: '/curator',
        templateUrl: '/uiViews/curator',
        controller: 'CuratorController'
    }).state('about', {
        url: '/about',
        templateUrl: '/uiViews/about',
        controller: 'AboutController'
    }).state('pricing', {
        url: '/pricing',
        templateUrl: '/uiViews/pricing',
        controller: 'PricingController'
    }).state('pricing.detail', {
        url: '/:level',
        templateUrl: '/uiViews/pricing-detail',
        controller: 'PricingDetailController'
    }).state('posts', {
        url: '/posts?page',
        templateUrl: '/uiViews/posts',
        controller: 'PostsController'
    }).state('post-detail', {
        url: '/post/:slug',
        templateUrl: 'uiViews/post-detail',
        controller: 'PostDetailController'
    }).state('post-category', {
        url: '/category/:id',
        templateUrl: '/uiViews/posts',
        controller: 'PostCategoryController'
    }).state('style-quiz', {
        url: '/style-quiz',
        templateUrl: 'uiViews/style-quiz',
        controller: 'StyleQuizController'
    })
    // .state('landing-page', {
    //   url: '/free-room-giveaway',
    //   templateUrl: 'uiViews/landing-page',
    //   controller: 'LandingPageController'
    // })
    .state('toc', {
        url: '/terms-and-conditions',
        templateUrl: 'uiViews/toc',
        controller: 'TOCController'
    }).state('privacy', {
        url: '/privacy-policy',
        templateUrl: 'uiViews/privacy',
        controller: 'PrivacyController'
    });
}]);

app.run(['$rootScope', '$location', function ($rootScope, $location) {

    $rootScope.toggleContact = function () {
        $rootScope.contactShow = !$rootScope.contactShow;
    };
    $rootScope.qShow = false;
    $rootScope.toggleQForm = function () {
        $rootScope.qShow = !$rootScope.qShow;
    };

    $rootScope.$on("$stateChangeSuccess", function (event, currentRoute, previousRoute) {
        window.scrollTo(0, 0);
        $rootScope.hideNav = currentRoute.url === '/free-room-giveaway' ? true : false;
    });
}]);
'use strict';

angular.module('about.controller', []).controller('AboutController', ['$scope', '$http', 'Meta', function ($scope, $http, Meta) {

	Meta.setTitle('About your interior designer | Cedar + Sage Design | Online Interior Design Studio');
	Meta.setDesc(' Iâ€™m a neurophysiologist turned interior designer with a rustic eclectic style.  I love to surround myself with soft, organic elements and greenery.');
	Meta.setKeywords('Interior designer, tailoring interior design, Bend, OR, design at any income level, interior design Instagram, passion in design, interior architecture and design, Academy of Arts University');

	$http.get('/api/about/content').then(function (res) {
		$scope.content = res.data[0];
	});
}]);
'use strict';

angular.module('curator.controller', []).controller('CuratorController', ['$scope', '$rootScope', '$http', '$window', 'QFactory', 'NotifierService', 'Meta', function ($scope, $rootScope, $http, $window, QFactory, notifier, Meta) {

    Meta.setTitle('Curator | Cedar + Sage Design | Online Interior Design Studio');
    Meta.setDesc("Luxury made affordable with our Virtual Interior Design Package.  Work one-on-one with an interior design expert to receive your curated shopping list.");
    Meta.setKeywords('online interior design, inspiration images, quick and fun design, virtual interior design, connect with us remotely, e-design, luxury made affordable, interior design, curator, virtual interior design services, personal style at any budget, online home interior design');

    window.scrollTo(0, 0);

    $http.get('/api/curator/content').then(function (res) {
        $scope.content = res.data[0];
        if ($scope.content.seoImage) {
            Meta.setSocialImage($scope.content.seoImage.url);
            Meta.setSecureSocialImage($scope.content.seoImage.secure_url);
        }
    });

    $scope.screenW = $window.innerWidth;

    $scope.colorList = [];
    $scope.colorNoList = [];
    $scope.drawnToList = [];
    $scope.furnitureList = [];
    $scope.formData = {};
    function addToList(answer, list) {
        var index = list.indexOf(answer);
        if (index > -1) {
            list.splice(index, 1);
        } else {
            list.push(answer);
        }
    }
    $scope.toggleColor = function (answer, question) {
        if (question == 'q2') {
            addToList(answer, $scope.drawnToList);
        } else if (question == 'q3') {
            addToList(answer, $scope.furnitureList);
        } else if (question == 'q5') {
            addToList(answer, $scope.colorList);
        } else {
            addToList(answer, $scope.colorNoList);
        }
    };

    $scope.select = function (e) {
        var box = angular.element(e.target);
    };

    var qForm = document.getElementById('qFormTitle');
    $scope.questions = QFactory.list();
    $scope.currentQuestion = 0;

    $scope.isCurrentQIndex = function (index) {
        return $scope.currentQuestion === index;
    };

    $scope.nextQ = function () {
        qForm.scrollIntoView(true);
        $scope.currentQuestion = $scope.currentQuestion < $scope.questions.length - 1 ? ++$scope.currentQuestion : 0;
    };

    $scope.prevQ = function () {
        qForm.scrollIntoView(true);
        $scope.currentQuestion = $scope.currentQuestion > 0 ? --$scope.currentQuestion : $scope.questions.length - 1;
    };

    $scope.submitQuestionaire = function () {

        var data = {
            q1: $scope.questions[0].response,
            q2: $scope.drawnToList,
            q3: $scope.furnitureList,
            q4: $scope.questions[3].response,
            q5: $scope.colorList,
            q6: $scope.colorNoList,
            name: $scope.formData.name,
            email: $scope.formData.email,
            phone: $scope.formData.phone,
            note: $scope.formData.note
        };

        $http.post('/api/questionaire-signup', data).then(function (response) {
            $scope.currentQuestion = 0;
            $rootScope.qShow = false;
            notifier.notify('Thank you for your message ' + response.data.name);
            $scope.qForm.$setPristine();
            $scope.colorList = [];
            $scope.colorNoList = [];
            $scope.drawnToList = [];
            $scope.furnitureList = [];
            $scope.formData = {};
        }, function (err) {
            notifier.error('There was an error processing your request. Please try again');
            console.log('There was a problem submitting your form ' + err);
        });
    };

    $scope.mySplit = function (string, i) {
        var array = string.split('-');
        if (array[i + 1] === undefined) {
            return array[i];
        } else if (array[i + 2] === undefined) {
            return array[i] + ' ' + array[i + 1];
        } else {
            return array[i] + ' ' + array[i + 1] + ' ' + array[i + 2];
        }
    };
}]);
'use strict';

angular.module('curator', ['curator.controller', 'questionaire.factory']);
'use strict';

angular.module('questionaire.factory', []).factory('QFactory', function () {

    var questions = [{
        id: 'q1',
        type: 'radio',
        question: 'Which space would you like designed first?',
        cols: 'col-4',
        answers: ['living', 'bedroom', 'dining', 'bath', 'kitchen', 'other'],
        response: ''
    }, {
        id: 'q2',
        type: 'checkbox',
        question: 'Which image(s) are you drawn to?',
        cols: 'col-6 col-sm-4',
        images: [{
            name: 'img1',
            selected: false
        }, {
            name: 'img2',
            selected: false
        }, {
            name: 'img3',
            selected: false
        }, {
            name: 'img4',
            selected: false
        }, {
            name: 'img5',
            selected: false
        }, {
            name: 'img6',
            selected: false
        }]
    }, {
        id: 'q3',
        type: 'checkbox',
        question: 'Where would you shop for furniture?',
        cols: 'col-6 col-sm-4',
        images: [{
            name: 'ikea',
            selected: false
        }, {
            name: 'pier-1',
            selected: false
        }, {
            name: 'west-elm',
            selected: false
        }, {
            name: 'crate-&-barrel',
            selected: false
        }, {
            name: 'cb2',
            selected: false
        }, {
            name: 'restoration-hardware',
            selected: false
        }]
    }, {
        id: 'q4',
        type: 'radio',
        question: 'How much money are you budgeting for your project, excluding the design fee?',
        cols: 'col-6 col-sm-4',
        answers: ['1-2', '2-5', '5-10', '10-15', '15-25', '25up'],
        response: ''
    }, {
        id: 'q5',
        type: 'checkbox',
        question: 'What colors would you like to see in the design?',
        cols: 'col-color',
        design: 'colors',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q6',
        type: 'checkbox',
        question: 'Select which colors you would NOT want to see?',
        cols: 'col-color',
        colors: [{ name: 'Black',
            selected: false
        }, { name: 'Grey',
            selected: false
        }, { name: 'Red',
            selected: false
        }, { name: 'Orange',
            selected: false
        }, { name: 'Yellow',
            selected: false
        }, { name: 'Lime',
            selected: false
        }, { name: 'Green',
            selected: false
        }, { name: 'Aqua',
            selected: false
        }, { name: 'Turquoise',
            selected: false
        }, { name: 'Slate',
            selected: false
        }, { name: 'Blue',
            selected: false
        }, { name: 'Purple',
            selected: false
        }, { name: 'Pink',
            selected: false
        }, { name: 'Brown',
            selected: false
        }, { name: 'Cream',
            selected: false
        }, { name: 'White',
            selected: false
        }]
    }, {
        id: 'q7',
        type: 'text'
    }];

    return {
        list: function list() {
            return questions;
        }
    };
});
'use strict';

angular.module('common', ['common.modal', 'common.inview', 'common.meta', 'common.nav', 'common.notifier', 'common.toc', 'common.privacy']);
'use strict';

angular.module('common.inview', []).directive('inView', ['$window', function ($window) {
    return {
        restrict: 'A',
        scope: {
            viewObj: '='
        },
        link: function link(scope, element, attrs) {
            angular.element($window).bind('scroll', function () {
                var $el = element[0],
                    pos = $el.getBoundingClientRect();
                //check to see if active class, if not, start animations with js and define selectors
                if (pos.top + scope.viewObj.offset < $window.scrollY) {
                    scope.viewObj.visible = true;
                }
                // else {
                //     scope.viewObj.visible = false;
                // }
                scope.$apply();
            });
        }

    };
}]);
'use strict';

angular.module('common.meta', []).factory('Meta', function () {
  var _title = 'Cedar + Sage Online Interior Design Studio';
  var desc = 'Where DIY meets professional interior design. We offer online interior design, space planning, branding, residential and furniture design.';
  var _keywords = 'boutique interior design studio, personally tailored services, virtual interior design, online interior design, interior design for everyone, shop your purchasing list, design style, style quiz, captivating compositions, decorate your home online';
  var _socialImage = 'http://res.cloudinary.com/www-cedarandsage-com/image/upload/v1545346325/vgce6vupjlzhyb9czkre.png';
  var _secureSocialImage = 'https://res.cloudinary.com/www-cedarandsage-com/image/upload/v1545346325/vgce6vupjlzhyb9czkre.png';

  return {
    title: function title() {
      return _title;
    },
    setTitle: function setTitle(newTitle) {
      return _title = newTitle;
    },
    description: function description() {
      return desc;
    },
    setDesc: function setDesc(newDesc) {
      return desc = newDesc;
    },
    keywords: function keywords() {
      return _keywords;
    },
    setKeywords: function setKeywords(newKeys) {
      return _keywords = newKeys;
    },
    socialImage: function socialImage() {
      return _socialImage;
    },
    setSocialImage: function setSocialImage(newImage) {
      return _socialImage = newImage;
    },
    secureSocialImage: function secureSocialImage() {
      return _secureSocialImage;
    },
    setSecureSocialImage: function setSecureSocialImage(newImage) {
      return _secureSocialImage = newImage;
    }
  };
}).controller('MetaController', ['$scope', 'Meta', function ($scope, Meta) {
  $scope.Meta = Meta;
  $scope.metaDesc = Meta;
}]);
'use strict';

angular.module('common.modal', []).directive('globalModal', ['$rootScope', function ($rootScope) {

  return {
    restrict: 'E',
    scope: {
      show: '=',
      video: '@'
    },
    replace: true,
    transclude: true,
    link: function link(scope, element, attrs) {
      scope.dialogStyle = {};
      if (attrs.width) scope.dialogStyle.width = attrs.width;
      if (attrs.height) scope.dialogStyle.height = attrs.height;

      scope.hideModal = function () {
        scope.$emit('close');
        if (scope.video) {
          var vid = document.getElementById('CS-video');
          vid.pause();
        }
        $rootScope.contactShow = false;
        $rootScope.qShow = false;
        scope.show = false;
      };
    },
    templateUrl: '/uiViews/modal'
  };
}]);
'use strict';

angular.module('common.nav', []).controller('NavController', ['$scope', '$rootScope', '$http', '$window', 'NotifierService', function ($scope, $rootScope, $http, $window, notifier) {

    $scope.formData = {};

    $scope.sendContact = function () {
        $http.post('/api/contact-form', $scope.formData).then(function (message, status, headers, config) {
            $rootScope.toggleContact();
            console.log(message);
            notifier.notify('Thank you for your message ' + message.data.name);
            $scope.formData = {};
        }, function (error, status, headers, config) {
            console.log(error);
        });
    };

    // $scope.hideNav = true;
    $scope.selected = false;
    $scope.toggleMenu = function () {
        if ($window.innerWidth < 992) {
            $scope.selected = !$scope.selected;
        }
    };

    $scope.socialShow = false;
    if ($window.innerWidth < 992) {
        $scope.socialShow = true;
    }
}]);
'use strict';

angular.module('cedar-and-sage').value('notific8', notific8);

angular.module('common.notifier', []).factory('NotifierService', ['notific8', function (notific8) {

  notific8('configure', {
    life: 3000,
    theme: 'atomic',
    zindex: 9999,
    verticalEdge: 'right',
    horizontalEdge: 'top',
    closeText: 'X'
  });

  return {
    notify: function notify(message) {
      notific8(message, { color: 'pear' });
      console.log(message);
    },
    error: function error(message) {
      notific8(message, { color: 'tomato' });
      console.log(message);
    }
  };
}]);
'use strict';

angular.module('common.privacy', []).controller('PrivacyController', ['$scope', function ($scope) {
    $scope.terms = ["Cedar and Sage Design respects your privacy and will never sell, rent or release your personal data to anyone.", "Cedar and Sage Design collects your name and email address in order to communicate throughout the design process, as well as, continue communication with updates to our services, news, promotional offerings and blog postings.", "Cedar and Sage Design contracts a trusted third party payment service (Wellâ€™s Fargo Merchant Services) to easily collect credit card payments. This ensures a quick and easy start to completing your design.", "Cedar and Sage Design may use third parties, such as social media sources to collect data for conversion tracking and targeted ad services to better reach our audience.", "Consent of Cedar and Sage Design Terms of Service will be binding by the Client signature of this E-design contract."];
}]);
'use strict';

angular.module('common.toc', []).controller('TOCController', ['$scope', function ($scope) {
    $scope.terms = ["All E-design services are to be paid in full and are non-refundable.", "For a combination space (i.e. living room-dining room combination), payment will be processed as two separate rooms.", "Rooms to be designed need to be completed. Pre-construction rooms are not accepted.", "Product sourcing is limited to the United States.", "Cedar and Sage Design cannot guarantee the prices or availability of products recommended in the purchase list.", "Design services begin once Cedar and Sage Design has receipt of the Client Questionnaire, Client Service Agreement and payment has processed. Any modifications to the agreed upon service may be available at an additional cost to be agreed upon in writing between the Client and Cedar and Sage Design.", "The Client agrees that follow-up questions are accepted by online communication only, unless otherwise discussed between the Client and Cedar and Sage Design. There will be no in-person visits.", "E-design deliverables will be provided as expeditiously as is consistent with the professional design conceptualization and process.", "E-design is an online, virtual service only. Cedar and Sage Design suggestions are made purely on a suggestion basis.", "Cedar and Sage Design will strive to accommodate the clientâ€™s needs. One revision of the design is provided within the E-design package. Once the final design is delivered, there will be no further modifications even in the event of displeasure.", "Cedar and Sage Design shall not be held responsible for any inaccurate dimensions provided by the client.", "Cedar and Sage Design cannot guarantee the size, material, color, texture or source to be completely accurate.", "If construction is planned, it is advisable to separately contract the services of a licensed contractor. All floor plans and renderings shall not be used as construction documents or for engineering or architectural purposes. These deliverables are conceptual only in order to set forth the intended design.", "Cedar and Sage Design shall not be held responsible for the purchase of recommended products, delivery arrangement of repairs to any damage, replacement of items or freight claims related to E-design recommended purchases.", "Cedar and Sage Design shall not be held responsible for the means, methods or procedures of construction, fabrication, delivery, assembly, installation or safety precautions or any other work intended for the execution of the completed E-design package. Cedar and Sage shall also not be held responsible for failure of any supplier, subcontractor, contractor, or any other person performing work related to the E-design package to meet deadlines or agreed upon schedules or completion of work.", "Cedar and Sage Design reserves the right to use the intellectual property of the deliverables including the mood board, personalized floor plan and purchase list for marketing, websites or blogs.", "The Client agrees to provide photographs of the E-design project following completion for marketing, websites or blogs."];
}]);
'use strict';

angular.module('banner.dir', []).directive('pageBanner', function () {
  return {
    restrict: 'E',
    templateUrl: '/uiViews/banner',
    replace: true,
    scope: { bgImage: '@' }
  };
});
'use strict';

angular.module('box.height.dir', []).directive('boxHeight', ['$window', '$timeout', function ($window, $timeout) {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      $timeout(function () {
        scope.newHeight = elem[0].offsetHeight;
      }, 1000);
      angular.element($window).bind('resize', function () {
        scope.$apply(function () {
          scope.newHeight = elem[0].offsetHeight;
        });
      });
    }
  };
}]);

angular.module('target.height.dir', []).directive('targetHeight', function () {
  return {
    restrict: 'A',
    link: function link(scope, elem, attrs) {
      scope.$watch('newHeight', function (newV, oldV) {
        //console.log('old value ' + oldV, 'new value ' + newV);
        elem.attr('style', 'height: ' + newV + 'px');
      });
    }
  };
});
'use strict';

angular.module('home.controller', []).controller('HomeController', ['$scope', '$window', '$http', 'ServiceFactory', 'Meta', function ($scope, $window, $http, ServiceFactory, Meta) {

  Meta.setTitle('Home | Cedar + Sage Design | Online Interior Design Studio');
  Meta.setDesc('Begin your interior design project with our personally tailored services. We create captivating compositions by curating a balanced design.');
  Meta.setKeywords('boutique interior design studio, personally tailored services, virtual interior design, online interior design, interior design for everyone, shop your purchasing list, design style, style quiz, captivating compositions, decorate your home online');

  $http.get('/api/home/content').then(function (res) {
    $scope.content = res.data[0];
    if ($scope.content.seoImage) {
      Meta.setSocialImage($scope.content.seoImage.url);
      Meta.setSecureSocialImage($scope.content.seoImage.secure_url);
    }
  });

  $scope.screenW = $window.innerWidth;
  $scope.videoShow = false;
  $scope.services = ServiceFactory.list();
  $scope.homeServices = ServiceFactory.homeList();
  $scope.videoHeight = $scope.screenW < 768 ? '50%' : '90%';

  $scope.welcome = {
    visible: false,
    offset: -200
  };

  $scope.drawingData = {};

  $scope.toggleVideo = function () {
    $scope.videoShow = !$scope.videoShow;
  };

  $scope.options = {
    origin: 'left',
    distance: '150px',
    easing: 'ease-in-out',
    delay: 30,
    scale: 1,
    duration: 1000,
    // reset: true,
    //    afterReveal: function (domEl) {
    //        document.getElementById("gallery").style.visibility = "visible";
    //    },
    sequence: {
      selector: '.box-container',
      interval: 300
    }
  };
}]);
'use strict';

angular.module('home', ['home.controller', 'box.height.dir', 'target.height.dir', 'banner.dir']);
'use strict';

angular.module('landing-page.controller', []).controller('LandingPageController', ['$scope', '$window', '$http', 'Meta', 'NotifierService', function ($scope, $window, $http, Meta, notifier) {

    Meta.setTitle('Landing Page');
    $scope.signupForm = {
        firstName: '',
        lastname: '',
        email: '',
        include: true
    };
    $scope.isMobile = $window.innerWidth < 768 ? true : false;

    $scope.signup = function () {
        $http.post('/api/free-room-signup', $scope.signupForm).then(function (message, status, headers, config) {
            notifier.notify('Thank you for signing up!');
            $scope.signupForm = {};
        }, function (error, status, headers, config) {
            console.log(error);
        });
    };
}]);
'use strict';

angular.module('pricing-detail.controller', []).controller('PricingDetailController', ['$scope', '$rootScope', '$window', '$stateParams', 'PricingFactory', function ($scope, $rootScope, $window, $stateParams, PricingFactory) {

  $scope.level = $stateParams.level;

  $scope.services = PricingFactory.list().filter(function (service) {
    return service.level.includes($scope.level);
  });

  $scope.selectedService = undefined;

  $scope.showSlide = function (slug) {
    $scope.selectedService = slug;
  };

  $scope.close = function () {
    $scope.selectedService = undefined;
  };

  $scope.contactUs = function () {
    $rootScope.toggleContact();
  };

  $scope.videoHeight = $scope.screenW < 768 ? '50%' : '90%';
  $scope.showRendering = false;
  $scope.toggleRendering = function () {
    $scope.showRendering = true;
  };

  $scope.bookShow = false;
  $scope.toggleBook = function () {
    $scope.bookShow = true;
  };

  var getClosest = function getClosest(elem, selector) {
    for (; elem && elem !== document; elem = elem.parentNode) {
      // Get closest match
      if (elem.matches(selector)) return elem;
    }
    return null;
  };

  $scope.nextPage = function () {
    angular.element(document.querySelectorAll('.active')).removeClass('active').addClass('flipped').next(document.querySelector('.page')).addClass('active');
  };

  $scope.prevPage = function () {
    $('.flipped').last().removeClass('flipped').addClass('active').siblings('.page').removeClass('active');
    // var elem = document.querySelector('.flipped');
    //.last()
    // elem.removeClass('flipped')
    // .addClass('active')
    // .next(document.querySelector('.page'))
    // .removeClass('active');
  };

  $scope.currentPage = 0;

  $scope.brandingContact = function () {
    $scope.showRendering = false;
    $scope.bookShow = false;
    $scope.contactUs();
  };
}]);
'use strict';

angular.module('pricing.controller', []).controller('PricingController', ['Meta', function (Meta) {

  Meta.setTitle("Design Package Options and Prices | Cedar + Sage Design | Online Interior Design Studio");
  Meta.setDesc("Designing for your personal style at any budget through our various design package options.  Learn more about our prices.  You imagine it, we design it.");
  Meta.setKeywords('Transparent pricing, transform the way that you live, online interior design, professional opinion, traditional interior design service, personally tailored design service, staging consultation, 3d rendering, branding booklets, client expectations');
}]);
'use strict';

angular.module('pricing.factory', []).factory('PricingFactory', function () {
  var services = [{
    name: 'IN-HOME DESIGN',
    slug: 'the-works',
    img: 'img/pricing/the-works.png',
    imgAlt: 'The Works',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    desc: "I will come to your home or commercial space to gather information regarding the design. The design process will be conceptualized, furniture, finishes and decor will be selected and approved by the client, and installation will occur.  Concierge design is a move-in service for obtaining necessary items, such as kitchen and bath accessories like dishes and shower curtains.",
    level: ['personal', 'all'],
    price: '$110/HR',
    button: {
      type: 'contact',
      text: 'contact to get started',
      link: 'contact'
    }
  }, {
    name: 'STAGING CONSULTATION',
    slug: 'staging',
    img: 'img/pricing/staging-consult.png',
    imgAlt: 'Staging Consultation',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    included: ['Staging Consulation', '3D Renderings', 'Branding'],
    desc: "This one's for my realtor friends. Do you have a client with a bad design? I give design advice to your client to create a welcoming environment for your open house.",
    price: '$100/HR',
    level: ['professional', 'all'],
    button: {
      type: 'contact',
      text: 'contact to get started',
      link: 'contact'
    }
  }, {
    name: 'THE CURATOR',
    slug: 'curator',
    img: 'img/pricing/curator.png',
    imgAlt: 'The Curator',
    banner: 'img/services/master-br.png',
    subHead: 'amplifying client spaces',
    included: ['Curator', 'The Works', 'Professional Option', "Client`s Choice"],
    desc: "The client works with me remotely by sending photos of the space to be designed, dimensions, and any inspiration. Cedar + Sage Design provides a mood board, floor plan, and purchase list. This is a very flexible program and allows the client to make their design come to life on their time.",
    price: '$6/Sq Ft',
    level: ['personal', 'all'],
    button: {
      type: 'link',
      text: 'Learn More',
      link: 'curator'
    }
  }, {
    name: 'THE PROFESSIONAL OPINION',
    slug: 'professional',
    img: 'img/pricing/professional-opinion.png',
    imgAlt: 'The Professional Option',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    desc: "I come to the client's home or retail space to give design tips and recommendations regarding the client's current design and possible future design.",
    price: '$100/HR',
    level: ['personal', 'all'],
    button: {
      type: 'contact',
      text: 'contact to get started',
      link: 'contact'
    }
  }, {
    name: '3D RENDERINGS',
    slug: '3d-renderings',
    img: 'img/pricing/3d-renderings.png',
    imgAlt: '3D Renderings',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    desc: "Set your listing apart from the competition with 3D Renderings. With my help, you can gain an edge in digital marketing. You can even save time and money by having your clients visit listings virtually first. 3D renderings are also a great way for clients to visualize properties under construction.",
    price: 'Price: To Be Determined',
    level: ['professional', 'all'],
    button: {
      type: 'modal',
      text: 'View',
      link: 'viewRendering'
    }
  }, {
    name: 'BRANDING',
    slug: 'branding',
    img: 'img/pricing/branding.png',
    imgAlt: 'Branding Booklet',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    desc: "It is important for businesses to stand out. By creating branding tools that potential clients or architects can get their hands on, I will help move your business to the front of the line. I can develop business tools that reflect your vision and reach your specific audience, such as portfolio booklets.",
    price: 'Starting at: $500',
    level: ['professional', 'all'],
    button: {
      type: 'modal',
      text: 'View',
      link: 'viewBooklet'
    }
  }, {
    name: 'CLIENT\'S CHOICE',
    slug: 'clients-choice',
    img: 'img/pricing/clients-choice.png',
    imgAlt: 'Client\'s Choice',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    desc: "A personally tailored design service can be created for you if these services do not align with what you are looking for in your project. This could be a shopping partner at your favorite furniture store to help make decisions, help selecting pillows or accessories, or even assistance determining the best paint color for your space.",
    price: 'Price: To Be Determined.',
    level: ['personal', 'all'],
    button: {
      type: 'contact',
      text: 'contact to get started',
      link: 'contact'
    }
  }];

  return {
    list: function list() {
      return services;
    },
    find: function find(slug) {
      return services.find(function (service) {
        return service.slug === slug;
      });
    }
  };
});
'use strict';

angular.module('pricing', ['pricing.controller', 'pricing-detail.controller', 'pricing.factory']);
'use strict';

angular.module('post-category.controller', []).controller('PostCategoryController', ['$scope', '$stateParams', 'Meta', 'PostService', function ($scope, $stateParams, Meta, PostService) {

	$scope.posts;
	$scope.currentCategory;
	$scope.categoryPage = true;

	PostService.getCategories().then(function (res) {
		$scope.currentCategory = res.find(function (cat) {
			return cat._id === $stateParams.id;
		});
		$scope.categories = res;
	});

	PostService.getCategoryPosts($stateParams.id).then(function (res) {
		$scope.posts = res;
		Meta.setTitle($scope.currentCategory.name);
	});
}]);
'use strict';

angular.module('post-detail.controller', []).controller('PostDetailController', ['$scope', '$stateParams', 'Meta', 'PostService', function ($scope, $stateParams, Meta, PostService) {

	$scope.post;
	PostService.getPost($stateParams.slug).then(function (res) {
		$scope.post = res;
		Meta.setTitle($scope.post.title);
		Meta.setSocialImage($scope.post.image.url);
		Meta.setSecureSocialImage($scope.post.image.secure_url);
	});
}]);
'use strict';

angular.module('post', ['posts.controller', 'post-detail.controller', 'post-category.controller', 'post.service']);
'use strict';

angular.module('posts.controller', []).controller('PostsController', ['$scope', '$location', 'Meta', 'PostService', function ($scope, $location, Meta, PostService) {

	Meta.setTitle(' Interior Design Inspiration and Advice Blog | Cedar + Sage Design | Online Interior Design Studio');
	Meta.setDesc('Get some interior design inspiration and design advice and tips on our Monday mood board posts.');
	Meta.setKeywords('Scandinavian inspiration, Pittsburgh inspiration, living room inspiration, kitchen inspiration, patio inspiration, bedroom inspiration, coastal inspiration, nursery inspiration, wood inspiration, wallpaper inspiration');

	$scope.posts;
	$scope.categories;
	$scope.categoryPage = false;
	$scope.pageQuery = $location.search().page;

	var url = $scope.pageQuery ? '/api/posts/list?page=' + $scope.pageQuery : '/api/posts/list';

	PostService.getPosts(url).then(function (res) {
		$scope.posts = res;
	});

	PostService.getCategories().then(function (res) {
		$scope.categories = res;
	});
}]);
'use strict';

angular.module('post.service', []).factory('PostService', ['$http', function ($http) {

		return {
				getPosts: function getPosts(url) {
						return $http.get(url).then(function (res) {
								return res.data;
						});
				},
				getPost: function getPost(slug) {
						return $http.get('/api/post/' + slug).then(function (res) {
								return res.data;
						});
				},
				getCategories: function getCategories() {
						return $http.get('/api/categories/list').then(function (res) {
								return res.data;
						});
				},
				getCategoryPosts: function getCategoryPosts(id) {
						return $http.get('/api/categories/' + id).then(function (res) {
								return res.data;
						});
				}
		};
}]);
'use strict';

angular.module('service.controller', []).controller('ServiceController', ['$scope', '$stateParams', 'ServiceFactory', 'Meta', function ($scope, $stateParams, ServiceFactory, Meta) {

    $scope.services = ServiceFactory.list();
}]);

angular.module('service.detail.controller', []).controller('SelectedServiceController', ['$scope', '$stateParams', 'ServiceFactory', 'Meta', function ($scope, $stateParams, ServiceFactory, Meta) {

    $scope.selectedService = ServiceFactory.find($stateParams.slug);
    $scope.branding = false;
    $scope.branding = $scope.selectedService.name === 'Branding' ? true : false;

    Meta.setTitle($scope.selectedService.name);

    if (!Element.prototype.matches) {
        Element.prototype.matches = Element.prototype.matchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || Element.prototype.oMatchesSelector || Element.prototype.webkitMatchesSelector || function (s) {
            var matches = (this.document || this.ownerDocument).querySelectorAll(s),
                i = matches.length;
            while (--i >= 0 && matches.item(i) !== this) {}
            return i > -1;
        };
    }

    $scope.bookShow1 = false;
    $scope.bookShow2 = false;
    $scope.toggleBook1 = function () {
        $scope.bookShow1 = true;
    };
    $scope.toggleBook2 = function () {
        $scope.bookShow2 = true;
    };

    var getClosest = function getClosest(elem, selector) {
        // Get closest match
        for (; elem && elem !== document; elem = elem.parentNode) {
            if (elem.matches(selector)) return elem;
        }
        return null;
    };

    $scope.nextPage = function () {
        angular.element(document.querySelectorAll('.active')).removeClass('active').addClass('flipped').next(document.querySelector('.page')).addClass('active');
        // $('.active')
        //   .removeClass('active')
        //   .addClass('flipped')
        //   .next('.page')
        //   .addClass('active')
        //   .siblings();
    };

    $scope.prevPage = function () {
        $('.flipped').last().removeClass('flipped').addClass('active').siblings('.page').removeClass('active');
        // var elem = document.querySelector('.flipped');
        //.last()
        // elem.removeClass('flipped')
        // .addClass('active')
        // .next(document.querySelector('.page'))
        // .removeClass('active');
    };

    $scope.currentPage = 0;
}]);
'use strict';

angular.module('service.factory', []).factory('ServiceFactory', function () {
  var services = [{
    name: 'Interior Design For All',
    slug: 'interior-design',
    logo: 'img/icons/home.svg',
    banner: 'img/services/master-br.png',
    subHead: 'amplifying client spaces',
    link: 'personal',
    included: [{
      name: 'Curator',
      link: 'curator'
    }, {
      name: 'IN-HOME DESIGN',
      link: 'pricing/personal'
    }, {
      name: 'Professional Opinion',
      link: 'pricing/personal'
    }, {
      name: 'Client\'s Choice',
      link: 'pricing/personal'
    }],
    desc: "Local to the Bend, Oregon area? We are here to assist you in your design needs. We want you to feel at home in your home. Weâ€™d love to get to know you to develop a style that is all your own. A design package with concepts and a floor plan will be created all the way through installation. Contact us for a free consultation!",
    img1: 'img/services/kitchen.png',
    img1Alt: 'Kitchen designed with locally sourced wood',
    img2: 'img/services/interior-design.png',
    img2Alt: 'Interior design finishes and fabrics'
  }, {
    name: 'Interior Design for the Pro',
    slug: 'space-planning',
    logo: 'img/icons/measurement.svg',
    banner: 'img/services/floor-plan.png',
    subHead: 'making your space functional',
    link: 'professional',
    included: [{
      name: 'Staging Consultation',
      link: 'pricing/professional'
    }, {
      name: '3D Renderings',
      link: 'pricing/professional'
    }, {
      name: 'Branding',
      link: 'pricing/professional'
    }],
    desc: "What is space planning? It is creating a highly functional furniture arrangement. Would you like assistance arranging the layout of your space? We are here to help! We will organize your existing or new furniture in a way that creates a more natural and functional flow with a customized floor plan that you will love.",
    img1: 'img/services/floorplan-spaceplanning.jpg',
    img1Alt: 'Floor plan created in photoshop',
    img2: 'img/services/floorplan.png',
    img2Alt: 'Open floor plan'
  }];

  var homeServices = ['Space Planning', '3D Renderings', 'Furniture Selection', 'Paint Selection', 'Remodels', 'Kitchen and Bath', 'Concierge Design', 'And More'];

  return {
    list: function list() {
      return services;
    },
    homeList: function homeList() {
      return homeServices;
    },
    find: function find(slug) {
      return services.find(function (service) {
        return service.slug == slug;
      });
    }
  };
});
'use strict';

angular.module('services', ['service.controller', 'service.detail.controller', 'service.factory', 'pricing.factory']);
'use strict';

angular.module('portfolio-detail.controller', []).controller('PortfolioDetailController', ['$scope', '$stateParams', '$http', 'Meta', function ($scope, $stateParams, $http, Meta) {

    $scope.post;
    var slug = $stateParams.slug;

    // $http.get(`/api/post/${slug}`).then((res)=> {
    //     $scope.post = res.data;
    // 	Meta.setTitle($scope.post.title);
    // 	Meta.setSocialImage($scope.post.image.url);
    // 	Meta.setSecureSocialImage($scope.post.image.secure_url);
    // });
}]);
'use strict';

angular.module('portfolio.controller', []).controller('PortfolioController', ['$scope', '$http', 'Meta', function ($scope, $http, Meta) {

	Meta.setTitle(' Interior Design Portfolio | Cedar + Sage Design | Online Interior Design Studio');
	Meta.setDesc('Get some interior design inspiration and design advice and tips on our Monday mood board posts.');
	Meta.setKeywords('interior design portfolio, interior design project, residential design, commercial design, interior design photos');
	$scope.posts;
	$scope.showCarousel = false;
	$scope.selectedPortfolio = undefined;
	$scope.selectedSlide = undefined;

	$scope.$on('close', function () {
		$scope.closeModal();
	});

	$http.get('/api/portfolio').then(function (res) {
		$scope.portfolios = res.data;
	});

	$scope.showSlide = function (slug) {
		$scope.selectedSlide = slug;
	};

	$scope.showCarouselModal = function (portfolio) {
		$scope.selectedPortfolio = portfolio;
		$scope.showCarousel = true;
	};

	$scope.closeModal = function () {
		$scope.showCarousel = false;
		$scope.selectedPortfolio = undefined;
	};

	$scope.closeSlide = function () {
		$scope.selectedSlide = undefined;
	};
}]);
'use strict';

angular.module('portfolio', ['portfolio.controller', 'portfolio-detail.controller', 'ui.carousel']);
'use strict';

angular.module('style-quiz.controller', []).controller('StyleQuizController', ['$scope', '$http', 'StyleQuizFactory', 'NotifierService', 'Meta', function ($scope, $http, StyleQuizFactory, notifier, Meta) {

	Meta.setTitle('Style Quiz | Cedar + Sage Design | Online Interior Design Studio');
	Meta.setSocialImage('http://res.cloudinary.com/www-cedarandsage-com/image/upload/v1545351821/style-quiz-seo.jpg');
	Meta.setSecureSocialImage('https://res.cloudinary.com/www-cedarandsage-com/image/upload/v1545351821/style-quiz-seo.jpg');

	window.scrollTo(0, 0);

	$scope.questions = StyleQuizFactory.list();
	$scope.answerList = StyleQuizFactory.answers();
	$scope.currentQuestion = 0;
	$scope.hasFinished = false;
	$scope.answers = [];
	$scope.formattedAnswers = '';
	$scope.responses = {
		bohemian: 0,
		contemporary: 0,
		eclectic: 0,
		industrial: 0,
		modern: 0,
		scandanavian: 0,
		traditional: 0,
		worldly: 0
	};
	$scope.formData = {};
	$scope.client = '';

	$scope.select = function (e) {
		var box = angular.element(e.target);
	};

	$scope.isCurrentQIndex = function (index) {
		return $scope.currentQuestion === index;
	};

	$scope.nextQ = function () {
		var answer = $scope.questions[$scope.currentQuestion].response;
		$scope.responses[answer]++;
		$scope.currentQuestion = $scope.currentQuestion < $scope.questions.length - 1 ? ++$scope.currentQuestion : 0;
	};

	$scope.prevQ = function () {
		$scope.currentQuestion = $scope.currentQuestion > 0 ? --$scope.currentQuestion : $scope.questions.length - 1;
		var answer = $scope.questions[$scope.currentQuestion].response;
		$scope.responses[answer]--;
	};

	$scope.submitQuiz = function () {
		var keys = Object.keys($scope.responses);
		var largest = Math.max.apply(null, Object.keys($scope.responses).map(function (x) {
			return $scope.responses[x];
		}));
		$scope.answers = keys.reduce(function (result, key) {
			if ($scope.responses[key] === largest) {
				result.push(key);
			}
			return result;
		}, []);
		if ($scope.answers.length > 2) {
			$scope.answers.length = 2;
		}
		$scope.formattedAnswers = $scope.answers.join(',').replace(/,/g, ' & ');
		$scope.answerList = $scope.answerList.filter(function (answer) {
			if ($scope.answers.indexOf(answer.id) !== -1) {
				return answer;
			}
		});

		var data = {
			firstName: $scope.formData.firstName,
			lastName: $scope.formData.lastName,
			email: $scope.formData.email,
			phone: $scope.formData.phone,
			note: $scope.formData.note,
			answers: $scope.formattedAnswers
		};

		$http.post('/api/style-quiz', data).then(function (response) {
			$scope.client = response.data.firstName;
			$scope.hasFinished = true;
		}, function (err) {
			notifier.error('There was an error processing your request. Please try again');
			console.log('There was a problem submitting your form ' + err);
		});
	};

	$scope.reset = function () {
		$scope.formData = {};
		$scope.hasFinished = false;
		$scope.questions = $scope.questions.map(function (q) {
			q.response = '';
			return q;
		});
		$scope.answerList = StyleQuizFactory.answers();
		$scope.currentQuestion = 0;
		$scope.answers = [];
		$scope.formattedAnswers = '';
		$scope.client = '';
		$scope.responses = {
			bohemian: 0,
			contemporary: 0,
			eclectic: 0,
			industrial: 0,
			modern: 0,
			scandanavian: 0,
			traditional: 0,
			worldly: 0
		};
	};
}]);
'use strict';

angular.module('style-quiz.factory', []).factory('StyleQuizFactory', function () {

	var answerArr = ['bohemian', 'contemporary', 'eclectic', 'industrial', 'modern', 'scandanavian', 'traditional', 'worldly'];

	var questions = [{
		id: 'Q1',
		key: 'bath',
		type: 'radio',
		question: 'Where would you want to start your mornings?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q2',
		key: 'bed',
		type: 'radio',
		question: 'Where would you want to lay your head at night?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q3',
		key: 'dining',
		type: 'radio',
		question: 'Where would you want to dine with your guests?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q4',
		key: 'fire',
		type: 'radio',
		question: 'Which fireplace would you like to cozy up to?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q5',
		key: 'home',
		type: 'radio',
		question: 'Which home feels the most welcoming to you?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q6',
		key: 'kitchen',
		type: 'radio',
		question: 'Where would you like to spend your time cooking?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q7',
		key: 'living',
		type: 'radio',
		question: 'In which space would you like to spend your time relaxing?',
		cols: 'col-6 col-sm-3',
		answers: answerArr,
		response: ''
	}, {
		id: 'Q8',
		type: 'text'
	}];

	var _answers = [{
		id: 'bohemian',
		desc: 'Youâ€™re a true free spirit!  You love to incorporate your life experiences, culture, and whimsy into your home.  You embrace a carefree approach to your design.  You love to surround yourself by things such as tapestries, greenery, and unusual objects.  An earthy color palette enhanced by jewel tones along with layered textures and patterns meets your relaxed vibe. You can shop this style best at second-hand stores, flee markets and always when traveling.'
	}, {
		id: 'contemporary',
		desc: 'You love curved and softened lines with a more minimalist feel, metals and glass.  Your go to colors are found within a neutral color palette, such as black, white, gray and beige.  This blended style was developed in the late 20th century and is created with a mix of traditional, modern and art deco design.  You can shop this style at places like Crate and Barrel and Z Gallerie.'
	}, {
		id: 'eclectic',
		desc: 'You span the majority of design styles and donâ€™t want to put yourself in just one style category.  You love mixing old and new, different colors, different textures, and different style trends.  This style is best accomplished when it flows throughout your entire home versus in just one location.  You have the ability to shop just about anywhere to achieve this look. Yay!'
	}, {
		id: 'industrial',
		desc: 'You love the look of brick, aged original hardwood floors and exposed beams and utilities.  Your go toâ€™s are dark metals, steel piping, reclaimed wood and open concept spaces. You truly appreciate something old that can be repurposed into something new.  You can shop this style at a local furniture designers shop, an architectural salvage store or just create your own.'
	}, {
		id: 'modern',
		desc: 'You truly appreciate mid-century modern and the art deco style.  You have a connection with an earthy feel, warm wood elements, minimalism, and clean architectural lines. You also believe Frank Lloyd Wright did things right!  Furniture with wooden frames and wooly bold colored upholstery are your go to.  You can shop this style at places like West Elm, All Modern and CB2.'
	}, {
		id: 'scandanavian',
		desc: 'You are drawn to a design with a simple neutral color palette with a minimalistic and simple design.  This Nordic style has come to the forefront in the US by the introduction of Ikea and their Swedish meatballs!  You greatly appreciate the function of furniture in your home.  You can shop this style at places like West Elm, Restoration Hardware and the beloved or hated, depending on who you are, Ikea.'
	}, {
		id: 'traditional',
		desc: 'You love rich colors that welcome you and your guests like a warm hug.  This style can span from 18th Century England to the French countryside.  You enjoy a good Damask pattern, a Persian rug and still-life artwork.  Crystal chandeliers and an abundance of ornate objects are calling your name.  You can shop this look at places like Thomasville Furniture and Ashley Furniture.'
	}, {
		id: 'worldly',
		desc: 'Some may call you a globetrotter or claim that you have wanderlust.  Collecting unique artifacts and furnishings from your travels makes you so happy.  Each time you look at those objects, you reflect upon your experiences from that destination.  The world is your oyster or in this caseâ€¦your go to marketplace!  Get out there and shop!'
	}];

	return {
		list: function list() {
			return questions;
		},
		answers: function answers() {
			return _answers;
		}
	};
});
'use strict';

angular.module('style-quiz', ['style-quiz.controller', 'style-quiz.factory']);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsImFib3V0L2Fib3V0LmNvbnRyb2xsZXIuanMiLCJjdXJhdG9yL2N1cmF0b3IuY29udHJvbGxlci5qcyIsImN1cmF0b3IvY3VyYXRvci5tb2R1bGUuanMiLCJjdXJhdG9yL3F1ZXN0aW9uYWlyZS5mYWN0b3J5LmpzIiwiY29tbW9uL2NvbW1vbi5tb2R1bGUuanMiLCJjb21tb24vaW52aWV3LmRpcmVjdGl2ZS5qcyIsImNvbW1vbi9tZXRhLmNvbnRyb2xsZXIuanMiLCJjb21tb24vbW9kYWwuZGlyZWN0aXZlLmpzIiwiY29tbW9uL25hdi5jb250cm9sbGVyLmpzIiwiY29tbW9uL25vdGlmaWVyLnNlcnZpY2UuanMiLCJjb21tb24vcHJpdmFjeS5jb250cm9sbGVyLmpzIiwiY29tbW9uL3RvYy5jb250cm9sbGVyLmpzIiwiaG9tZS9iYW5uZXIuZGlyZWN0aXZlLmpzIiwiaG9tZS9ib3guZGlyZWN0aXZlLmpzIiwiaG9tZS9ob21lLmNvbnRyb2xsZXIuanMiLCJob21lL2hvbWUubW9kdWxlLmpzIiwibHAvbGFuZGluZy1wYWdlLmNvbnRyb2xsZXIuanMiLCJwcmljaW5nL3ByaWNpbmctZGV0YWlsLmNvbnRyb2xsZXIuanMiLCJwcmljaW5nL3ByaWNpbmcuY29udHJvbGxlci5qcyIsInByaWNpbmcvcHJpY2luZy5mYWN0b3J5LmpzIiwicHJpY2luZy9wcmljaW5nLm1vZHVsZS5qcyIsInBvc3RzL3Bvc3QtY2F0ZWdvcnkuY29udHJvbGxlci5qcyIsInBvc3RzL3Bvc3QtZGV0YWlsLmNvbnRyb2xsZXIuanMiLCJwb3N0cy9wb3N0Lm1vZHVsZS5qcyIsInBvc3RzL3Bvc3RzLmNvbnRyb2xsZXIuanMiLCJwb3N0cy9wb3N0cy5zZXJ2aWNlLmpzIiwic2VydmljZXMvc2VydmljZS5jb250cm9sbGVyLmpzIiwic2VydmljZXMvc2VydmljZS5mYWN0b3J5LmpzIiwic2VydmljZXMvc2VydmljZS5tb2R1bGUuanMiLCJwb3J0Zm9saW8vcG9ydGZvbGlvLWRldGFpbC5jb250cm9sbGVyLmpzIiwicG9ydGZvbGlvL3BvcnRmb2xpby5jb250cm9sbGVyLmpzIiwicG9ydGZvbGlvL3BvcnRmb2xpby5tb2R1bGUuanMiLCJzdHlsZS1xdWl6L3N0eWxlLXF1aXouY29udHJvbGxlci5qcyIsInN0eWxlLXF1aXovc3R5bGUtcXVpei5mYWN0b3J5LmpzIiwic3R5bGUtcXVpei9zdHlsZS1xdWl6Lm1vZHVsZS5qcyJdLCJuYW1lcyI6WyJhcHAiLCJhbmd1bGFyIiwibW9kdWxlIiwiY29uZmlnIiwiJGxvY2F0aW9uUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsIm90aGVyd2lzZSIsImh0bWw1TW9kZSIsInN0YXRlIiwidXJsIiwidGVtcGxhdGVVcmwiLCJjb250cm9sbGVyIiwicnVuIiwiJHJvb3RTY29wZSIsIiRsb2NhdGlvbiIsInRvZ2dsZUNvbnRhY3QiLCJjb250YWN0U2hvdyIsInFTaG93IiwidG9nZ2xlUUZvcm0iLCIkb24iLCJldmVudCIsImN1cnJlbnRSb3V0ZSIsInByZXZpb3VzUm91dGUiLCJ3aW5kb3ciLCJzY3JvbGxUbyIsImhpZGVOYXYiLCIkc2NvcGUiLCIkaHR0cCIsIk1ldGEiLCJzZXRUaXRsZSIsInNldERlc2MiLCJzZXRLZXl3b3JkcyIsImdldCIsInRoZW4iLCJyZXMiLCJjb250ZW50IiwiZGF0YSIsIiR3aW5kb3ciLCJRRmFjdG9yeSIsIm5vdGlmaWVyIiwic2VvSW1hZ2UiLCJzZXRTb2NpYWxJbWFnZSIsInNldFNlY3VyZVNvY2lhbEltYWdlIiwic2VjdXJlX3VybCIsInNjcmVlblciLCJpbm5lcldpZHRoIiwiY29sb3JMaXN0IiwiY29sb3JOb0xpc3QiLCJkcmF3blRvTGlzdCIsImZ1cm5pdHVyZUxpc3QiLCJmb3JtRGF0YSIsImFkZFRvTGlzdCIsImFuc3dlciIsImxpc3QiLCJpbmRleCIsImluZGV4T2YiLCJzcGxpY2UiLCJwdXNoIiwidG9nZ2xlQ29sb3IiLCJxdWVzdGlvbiIsInNlbGVjdCIsImUiLCJib3giLCJlbGVtZW50IiwidGFyZ2V0IiwicUZvcm0iLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwicXVlc3Rpb25zIiwiY3VycmVudFF1ZXN0aW9uIiwiaXNDdXJyZW50UUluZGV4IiwibmV4dFEiLCJzY3JvbGxJbnRvVmlldyIsImxlbmd0aCIsInByZXZRIiwic3VibWl0UXVlc3Rpb25haXJlIiwicTEiLCJyZXNwb25zZSIsInEyIiwicTMiLCJxNCIsInE1IiwicTYiLCJuYW1lIiwiZW1haWwiLCJwaG9uZSIsIm5vdGUiLCJwb3N0Iiwibm90aWZ5IiwiJHNldFByaXN0aW5lIiwiZXJyIiwiZXJyb3IiLCJjb25zb2xlIiwibG9nIiwibXlTcGxpdCIsInN0cmluZyIsImkiLCJhcnJheSIsInNwbGl0IiwidW5kZWZpbmVkIiwiZmFjdG9yeSIsImlkIiwidHlwZSIsImNvbHMiLCJhbnN3ZXJzIiwiaW1hZ2VzIiwic2VsZWN0ZWQiLCJkZXNpZ24iLCJjb2xvcnMiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsInNjb3BlIiwidmlld09iaiIsImxpbmsiLCJhdHRycyIsImJpbmQiLCIkZWwiLCJwb3MiLCJnZXRCb3VuZGluZ0NsaWVudFJlY3QiLCJ0b3AiLCJvZmZzZXQiLCJzY3JvbGxZIiwidmlzaWJsZSIsIiRhcHBseSIsInRpdGxlIiwiZGVzYyIsImtleXdvcmRzIiwic29jaWFsSW1hZ2UiLCJzZWN1cmVTb2NpYWxJbWFnZSIsIm5ld1RpdGxlIiwiZGVzY3JpcHRpb24iLCJuZXdEZXNjIiwibmV3S2V5cyIsIm5ld0ltYWdlIiwibWV0YURlc2MiLCJzaG93IiwidmlkZW8iLCJyZXBsYWNlIiwidHJhbnNjbHVkZSIsImRpYWxvZ1N0eWxlIiwid2lkdGgiLCJoZWlnaHQiLCJoaWRlTW9kYWwiLCIkZW1pdCIsInZpZCIsInBhdXNlIiwic2VuZENvbnRhY3QiLCJtZXNzYWdlIiwic3RhdHVzIiwiaGVhZGVycyIsInRvZ2dsZU1lbnUiLCJzb2NpYWxTaG93IiwidmFsdWUiLCJub3RpZmljOCIsImxpZmUiLCJ0aGVtZSIsInppbmRleCIsInZlcnRpY2FsRWRnZSIsImhvcml6b250YWxFZGdlIiwiY2xvc2VUZXh0IiwiY29sb3IiLCJ0ZXJtcyIsImJnSW1hZ2UiLCIkdGltZW91dCIsImVsZW0iLCJuZXdIZWlnaHQiLCJvZmZzZXRIZWlnaHQiLCIkd2F0Y2giLCJuZXdWIiwib2xkViIsImF0dHIiLCJTZXJ2aWNlRmFjdG9yeSIsInZpZGVvU2hvdyIsInNlcnZpY2VzIiwiaG9tZVNlcnZpY2VzIiwiaG9tZUxpc3QiLCJ2aWRlb0hlaWdodCIsIndlbGNvbWUiLCJkcmF3aW5nRGF0YSIsInRvZ2dsZVZpZGVvIiwib3B0aW9ucyIsIm9yaWdpbiIsImRpc3RhbmNlIiwiZWFzaW5nIiwiZGVsYXkiLCJzY2FsZSIsImR1cmF0aW9uIiwic2VxdWVuY2UiLCJzZWxlY3RvciIsImludGVydmFsIiwic2lnbnVwRm9ybSIsImZpcnN0TmFtZSIsImxhc3RuYW1lIiwiaW5jbHVkZSIsImlzTW9iaWxlIiwic2lnbnVwIiwiJHN0YXRlUGFyYW1zIiwiUHJpY2luZ0ZhY3RvcnkiLCJsZXZlbCIsImZpbHRlciIsInNlcnZpY2UiLCJpbmNsdWRlcyIsInNlbGVjdGVkU2VydmljZSIsInNob3dTbGlkZSIsInNsdWciLCJjbG9zZSIsImNvbnRhY3RVcyIsInNob3dSZW5kZXJpbmciLCJ0b2dnbGVSZW5kZXJpbmciLCJib29rU2hvdyIsInRvZ2dsZUJvb2siLCJnZXRDbG9zZXN0IiwicGFyZW50Tm9kZSIsIm1hdGNoZXMiLCJuZXh0UGFnZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJyZW1vdmVDbGFzcyIsImFkZENsYXNzIiwibmV4dCIsInF1ZXJ5U2VsZWN0b3IiLCJwcmV2UGFnZSIsIiQiLCJsYXN0Iiwic2libGluZ3MiLCJjdXJyZW50UGFnZSIsImJyYW5kaW5nQ29udGFjdCIsImltZyIsImltZ0FsdCIsImJhbm5lciIsInN1YkhlYWQiLCJwcmljZSIsImJ1dHRvbiIsInRleHQiLCJpbmNsdWRlZCIsImZpbmQiLCJQb3N0U2VydmljZSIsInBvc3RzIiwiY3VycmVudENhdGVnb3J5IiwiY2F0ZWdvcnlQYWdlIiwiZ2V0Q2F0ZWdvcmllcyIsImNhdCIsIl9pZCIsImNhdGVnb3JpZXMiLCJnZXRDYXRlZ29yeVBvc3RzIiwiZ2V0UG9zdCIsImltYWdlIiwicGFnZVF1ZXJ5Iiwic2VhcmNoIiwicGFnZSIsImdldFBvc3RzIiwiYnJhbmRpbmciLCJFbGVtZW50IiwicHJvdG90eXBlIiwibWF0Y2hlc1NlbGVjdG9yIiwibW96TWF0Y2hlc1NlbGVjdG9yIiwibXNNYXRjaGVzU2VsZWN0b3IiLCJvTWF0Y2hlc1NlbGVjdG9yIiwid2Via2l0TWF0Y2hlc1NlbGVjdG9yIiwicyIsIm93bmVyRG9jdW1lbnQiLCJpdGVtIiwiYm9va1Nob3cxIiwiYm9va1Nob3cyIiwidG9nZ2xlQm9vazEiLCJ0b2dnbGVCb29rMiIsImxvZ28iLCJpbWcxIiwiaW1nMUFsdCIsImltZzIiLCJpbWcyQWx0Iiwic2hvd0Nhcm91c2VsIiwic2VsZWN0ZWRQb3J0Zm9saW8iLCJzZWxlY3RlZFNsaWRlIiwiY2xvc2VNb2RhbCIsInBvcnRmb2xpb3MiLCJzaG93Q2Fyb3VzZWxNb2RhbCIsInBvcnRmb2xpbyIsImNsb3NlU2xpZGUiLCJTdHlsZVF1aXpGYWN0b3J5IiwiYW5zd2VyTGlzdCIsImhhc0ZpbmlzaGVkIiwiZm9ybWF0dGVkQW5zd2VycyIsInJlc3BvbnNlcyIsImJvaGVtaWFuIiwiY29udGVtcG9yYXJ5IiwiZWNsZWN0aWMiLCJpbmR1c3RyaWFsIiwibW9kZXJuIiwic2NhbmRhbmF2aWFuIiwidHJhZGl0aW9uYWwiLCJ3b3JsZGx5IiwiY2xpZW50Iiwic3VibWl0UXVpeiIsImtleXMiLCJPYmplY3QiLCJsYXJnZXN0IiwiTWF0aCIsIm1heCIsImFwcGx5IiwibWFwIiwieCIsInJlZHVjZSIsInJlc3VsdCIsImtleSIsImpvaW4iLCJsYXN0TmFtZSIsInJlc2V0IiwicSIsImFuc3dlckFyciJdLCJtYXBwaW5ncyI6Ijs7QUFBQSxJQUFNQSxNQUFNQyxRQUFRQyxNQUFSLENB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UUFBTSxnQkFBTTtBQUNWLFVBQU9lLFNBQVA7QUFDSixHQUhPO0FBSVJvQyxXQUFTLG1CQUFNO0FBQ2hCLFVBQU9BLFFBQVA7QUFDRTtBQU5PLEVBQVA7QUFTSCxDQXRIRDs7O0FDQUF4RyxRQUFRQyxNQUFSLENBQWUsWUFBZixFQUE2QixDQUFDLHVCQUFELEVBQTBCLG9CQUExQixDQUE3QiIsImZpbGUiOiJhcHAubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXBwID0gYW5ndWxhci5tb2R1bGUoJ2NlZGFyLWFuZC1zYWdlJywgWydob21lJywgJ3BvcnRmb2xpbycsICdzZXJ2aWNlcycsICdjb21tb24nLCAnY3VyYXRvcicsICdwb3N0JywgJ3ByaWNpbmcnLCAnYWJvdXQuY29udHJvbGxlcicsICdsYW5kaW5nLXBhZ2UuY29udHJvbGxlcicsICd1aS5yb3V0ZXInLCAnbmdTY3JvbGxSZXZlYWwnLCAnbmdTYW5pdGl6ZScsICdzdHlsZS1xdWl6J10pO1xuXG5hcHAuY29uZmlnKFsnJGxvY2F0aW9uUHJvdmlkZXInLCAnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgKCRsb2NhdGlvblByb3ZpZGVyLCAkc3RhdGVQcm92aWRlciwgJHVybFJvdXRlclByb3ZpZGVyKSA9PiB7XG5cbiAgICAkdXJsUm91dGVyUHJvdmlkZXIub3RoZXJ3aXNlKCcvJyk7XG4gICAgJGxvY2F0aW9uUHJvdmlkZXIuaHRtbDVNb2RlKHRydWUpO1xuXG4gICAgJHN0YXRlUHJvdmlkZXJcbiAgICAgIC5zdGF0ZSgnaG9tZScsIHtcbiAgICAgICAgICB1cmw6ICcvJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91aVZpZXdzL2hvbWUnLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdIb21lQ29udHJvbGxlcidcblx0XHRcdH0pXG5cdFx0XHQuc3RhdGUoJ3BvcnRmb2xpbycsIHtcblx0XHRcdFx0dXJsOiAnL3BvcnRmb2xpbycsXG5cdFx0XHRcdHRlbXBsYXRlVXJsOiAnL3VpVmlld3MvcG9ydGZvbGlvJyxcblx0XHRcdFx0Y29udHJvbGxlcjogJ1BvcnRmb2xpb0NvbnRyb2xsZXInXG5cdFx0fSlcbiAgICAgIC5zdGF0ZSgnc2VydmljZXMnLCB7XG4gICAgICAgICAgdXJsOiAnL3NlcnZpY2VzJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91aVZpZXdzL3NlcnZpY2VzJyxcbiAgICAgICAgICBjb250cm9sbGVyOiAnU2VydmljZUNvbnRyb2xsZXInXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdjdXJhdG9yJywge1xuICAgICAgICAgIHVybDogJy9jdXJhdG9yJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJy91aVZpZXdzL2N1cmF0b3InLFxuICAgICAgICAgIGNvbnRyb2xsZXI6ICdDdXJhdG9yQ29udHJvbGxlcidcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Fib3V0Jywge1xuICAgICAgICAgIHVybDogJy9hYm91dCcsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICcvdWlWaWV3cy9hYm91dCcsXG4gICAgICAgICAgY29udHJvbGxlcjogJ0Fib3V0Q29udHJvbGxlcidcblx0ICB9KVxuXHQgIC5zdGF0ZSgncHJpY2luZycsIHtcblx0XHQgIHVybDogJy9wcmljaW5nJyxcblx0XHQgIHRlbXBsYXRlVXJsOiAnL3VpVmlld3MvcHJpY2luZycsXG5cdFx0ICBjb250cm9sbGVyOiAnUHJpY2luZ0NvbnRyb2xsZXInXG5cdCAgfSlcblx0ICAuc3RhdGUoJ3ByaWNpbmcuZGV0YWlsJywge1xuXHRcdHVybDogJy86bGV2ZWwnLFxuXHRcdHRlbXBsYXRlVXJsOiAnL3VpVmlld3MvcHJpY2luZy1kZXRhaWwnLFxuXHRcdGNvbnRyb2xsZXI6ICdQcmljaW5nRGV0YWlsQ29udHJvbGxlcidcblx0ICB9KVxuICAgIC5zdGF0ZSgncG9zdHMnLCB7XG4gICAgICAgIHVybDogJy9wb3N0cz9wYWdlJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICcvdWlWaWV3cy9wb3N0cycsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdQb3N0c0NvbnRyb2xsZXInXG4gICAgfSlcbiAgICAuc3RhdGUoJ3Bvc3QtZGV0YWlsJywge1xuICAgICAgdXJsOiAnL3Bvc3QvOnNsdWcnLFxuICAgICAgdGVtcGxhdGVVcmw6ICd1aVZpZXdzL3Bvc3QtZGV0YWlsJyxcbiAgICAgIGNvbnRyb2xsZXI6ICdQb3N0RGV0YWlsQ29udHJvbGxlcidcblx0fSlcblx0LnN0YXRlKCdwb3N0LWNhdGVnb3J5Jywge1xuXHRcdHVybDogJy9jYXRlZ29yeS86aWQnLFxuXHRcdHRlbXBsYXRlVXJsOiAnL3VpVmlld3MvcG9zdHMnLFxuXHRcdGNvbnRyb2xsZXI6ICdQb3N0Q2F0ZWdvcnlDb250cm9sbGVyJ1xufSlcblx0LnN0YXRlKCdzdHlsZS1xdWl6Jywge1xuXHRcdHVybDogJy9zdHlsZS1xdWl6Jyxcblx0XHR0ZW1wbGF0ZVVybDogJ3VpVmlld3Mvc3R5bGUtcXVpeicsXG5cdFx0Y29udHJvbGxlcjogJ1N0eWxlUXVpekNvbnRyb2xsZXInXG5cdCAgfSlcbiAgICAvLyAuc3RhdGUoJ2xhbmRpbmctcGFnZScsIHtcbiAgICAvLyAgIHVybDogJy9mcmVlLXJvb20tZ2l2ZWF3YXknLFxuICAgIC8vICAgdGVtcGxhdGVVcmw6ICd1aVZpZXdzL2xhbmRpbmctcGFnZScsXG4gICAgLy8gICBjb250cm9sbGVyOiAnTGFuZGluZ1BhZ2VDb250cm9sbGVyJ1xuICAgIC8vIH0pXG4gICAgLnN0YXRlKCd0b2MnLCB7XG4gICAgICB1cmw6ICcvdGVybXMtYW5kLWNvbmRpdGlvbnMnLFxuICAgICAgdGVtcGxhdGVVcmw6ICd1aVZpZXdzL3RvYycsXG4gICAgICBjb250cm9sbGVyOiAnVE9DQ29udHJvbGxlcidcbiAgICB9KVxuICAgIC5zdGF0ZSgncHJpdmFjeScsIHtcbiAgICAgIHVybDogJy9wcml2YWN5LXBvbGljeScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ3VpVmlld3MvcHJpdmFjeScsXG4gICAgICBjb250cm9sbGVyOiAnUHJpdmFjeUNvbnRyb2xsZXInXG4gICAgfSlcbn1dKTtcblxuXG5hcHAucnVuKFsnJHJvb3RTY29wZScsICckbG9jYXRpb24nLCBmdW5jdGlvbigkcm9vdFNjb3BlLCAkbG9jYXRpb24pe1xuXG4gICRyb290U2NvcGUudG9nZ2xlQ29udGFjdCA9IGZ1bmN0aW9uKCl7XG4gICAgICAkcm9vdFNjb3BlLmNvbnRhY3RTaG93ID0gISRyb290U2NvcGUuY29udGFjdFNob3c7XG4gIH1cbiAgJHJvb3RTY29wZS5xU2hvdyA9IGZhbHNlO1xuICAkcm9vdFNjb3BlLnRvZ2dsZVFGb3JtID0gKCkgPT4ge1xuICAgICAgJHJvb3RTY29wZS5xU2hvdyA9ICEkcm9vdFNjb3BlLnFTaG93O1xuICB9XG5cbiAgJHJvb3RTY29wZS4kb24oXCIkc3RhdGVDaGFuZ2VTdWNjZXNzXCIsIGZ1bmN0aW9uIChldmVudCwgY3VycmVudFJvdXRlLCBwcmV2aW91c1JvdXRlKSB7XG4gICAgICB3aW5kb3cuc2Nyb2xsVG8oMCwwKTtcbiAgICAgICRyb290U2NvcGUuaGlkZU5hdiA9IChjdXJyZW50Um91dGUudXJsID09PSAnL2ZyZWUtcm9vbS1naXZlYXdheScpID8gdHJ1ZSA6IGZhbHNlO1xuICB9KTtcblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2Fib3V0LmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignQWJvdXRDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGh0dHAnLCAnTWV0YScsICgkc2NvcGUsICRodHRwLCBNZXRhKSA9PiB7XG5cblx0TWV0YS5zZXRUaXRsZSgnQWJvdXQgeW91ciBpbnRlcmlvciBkZXNpZ25lciB8IENlZGFyICsgU2FnZSBEZXNpZ24gfCBPbmxpbmUgSW50ZXJpb3IgRGVzaWduIFN0dWRpbycpO1xuXHRNZXRhLnNldERlc2MoJyBJ4oCZbSBhIG5ldXJvcGh5c2lvbG9naXN0IHR1cm5lZCBpbnRlcmlvciBkZXNpZ25lciB3aXRoIGEgcnVzdGljIGVjbGVjdGljIHN0eWxlLiAgSSBsb3ZlIHRvIHN1cnJvdW5kIG15c2VsZiB3aXRoIHNvZnQsIG9yZ2FuaWMgZWxlbWVudHMgYW5kIGdyZWVuZXJ5LicpO1xuXHRNZXRhLnNldEtleXdvcmRzKCdJbnRlcmlvciBkZXNpZ25lciwgdGFpbG9yaW5nIGludGVyaW9yIGRlc2lnbiwgQmVuZCwgT1IsIGRlc2lnbiBhdCBhbnkgaW5jb21lIGxldmVsLCBpbnRlcmlvciBkZXNpZ24gSW5zdGFncmFtLCBwYXNzaW9uIGluIGRlc2lnbiwgaW50ZXJpb3IgYXJjaGl0ZWN0dXJlIGFuZCBkZXNpZ24sIEFjYWRlbXkgb2YgQXJ0cyBVbml2ZXJzaXR5Jyk7XG5cdFxuXHQkaHR0cC5nZXQoJy9hcGkvYWJvdXQvY29udGVudCcpLnRoZW4oKHJlcyk9PiB7XG5cdFx0JHNjb3BlLmNvbnRlbnQgPSByZXMuZGF0YVswXTtcblx0fSk7XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjdXJhdG9yLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignQ3VyYXRvckNvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm9vdFNjb3BlJywgJyRodHRwJywgJyR3aW5kb3cnLCAnUUZhY3RvcnknLCAnTm90aWZpZXJTZXJ2aWNlJywgJ01ldGEnLCAoJHNjb3BlLCAkcm9vdFNjb3BlLCAkaHR0cCwgJHdpbmRvdywgUUZhY3RvcnksIG5vdGlmaWVyLCBNZXRhKSA9PiB7XG5cbiAgICBNZXRhLnNldFRpdGxlKCdDdXJhdG9yIHwgQ2VkYXIgKyBTYWdlIERlc2lnbiB8IE9ubGluZSBJbnRlcmlvciBEZXNpZ24gU3R1ZGlvJyk7XG4gICAgTWV0YS5zZXREZXNjKFwiTHV4dXJ5IG1hZGUgYWZmb3JkYWJsZSB3aXRoIG91ciBWaXJ0dWFsIEludGVyaW9yIERlc2lnbiBQYWNrYWdlLiAgV29yayBvbmUtb24tb25lIHdpdGggYW4gaW50ZXJpb3IgZGVzaWduIGV4cGVydCB0byByZWNlaXZlIHlvdXIgY3VyYXRlZCBzaG9wcGluZyBsaXN0LlwiKTtcbiAgICBNZXRhLnNldEtleXdvcmRzKCdvbmxpbmUgaW50ZXJpb3IgZGVzaWduLCBpbnNwaXJhdGlvbiBpbWFnZXMsIHF1aWNrIGFuZCBmdW4gZGVzaWduLCB2aXJ0dWFsIGludGVyaW9yIGRlc2lnbiwgY29ubmVjdCB3aXRoIHVzIHJlbW90ZWx5LCBlLWRlc2lnbiwgbHV4dXJ5IG1hZGUgYWZmb3JkYWJsZSwgaW50ZXJpb3IgZGVzaWduLCBjdXJhdG9yLCB2aXJ0dWFsIGludGVyaW9yIGRlc2lnbiBzZXJ2aWNlcywgcGVyc29uYWwgc3R5bGUgYXQgYW55IGJ1ZGdldCwgb25saW5lIGhvbWUgaW50ZXJpb3IgZGVzaWduJyk7XG5cblx0d2luZG93LnNjcm9sbFRvKDAsIDApO1xuXHRcblx0JGh0dHAuZ2V0KCcvYXBpL2N1cmF0b3IvY29udGVudCcpLnRoZW4oKHJlcyk9PiB7XG5cdFx0JHNjb3BlLmNvbnRlbnQgPSByZXMuZGF0YVswXTtcblx0XHRpZiAoJHNjb3BlLmNvbnRlbnQuc2VvSW1hZ2UpIHtcblx0XHRcdE1ldGEuc2V0U29jaWFsSW1hZ2UoJHNjb3BlLmNvbnRlbnQuc2VvSW1hZ2UudXJsKTtcblx0XHRcdE1ldGEuc2V0U2VjdXJlU29jaWFsSW1hZ2UoJHNjb3BlLmNvbnRlbnQuc2VvSW1hZ2Uuc2VjdXJlX3VybCk7XG5cdFx0fVxuXHR9KTtcblxuICAgICRzY29wZS5zY3JlZW5XID0gJHdpbmRvdy5pbm5lcldpZHRoO1xuXG4gICAgJHNjb3BlLmNvbG9yTGlzdCA9IFtdO1xuICAgICRzY29wZS5jb2xvck5vTGlzdCA9IFtdO1xuICAgICRzY29wZS5kcmF3blRvTGlzdCA9IFtdO1xuICAgICRzY29wZS5mdXJuaXR1cmVMaXN0ID0gW107XG4gICAgJHNjb3BlLmZvcm1EYXRhPSB7fTtcbiAgICBmdW5jdGlvbiBhZGRUb0xpc3QoYW5zd2VyLCBsaXN0KXtcbiAgICAgICAgdmFyIGluZGV4ID0gbGlzdC5pbmRleE9mKGFuc3dlcik7XG4gICAgICAgIGlmKGluZGV4ID4gLTEpe1xuICAgICAgICAgICAgbGlzdC5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgbGlzdC5wdXNoKGFuc3dlcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgJHNjb3BlLnRvZ2dsZUNvbG9yID0gZnVuY3Rpb24oYW5zd2VyLCBxdWVzdGlvbil7XG4gICAgICAgIGlmKHF1ZXN0aW9uID09ICdxMicpe1xuICAgICAgICAgICAgYWRkVG9MaXN0KGFuc3dlciwgJHNjb3BlLmRyYXduVG9MaXN0KTtcbiAgICAgICAgfSBlbHNlIGlmKHF1ZXN0aW9uID09ICdxMycpe1xuICAgICAgICAgICAgYWRkVG9MaXN0KGFuc3dlciwgJHNjb3BlLmZ1cm5pdHVyZUxpc3QpO1xuICAgICAgICB9IGVsc2UgaWYocXVlc3Rpb24gPT0gJ3E1Jyl7XG4gICAgICAgICAgICBhZGRUb0xpc3QoYW5zd2VyLCAkc2NvcGUuY29sb3JMaXN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGFkZFRvTGlzdChhbnN3ZXIsICRzY29wZS5jb2xvck5vTGlzdCk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuc2VsZWN0ID0gZnVuY3Rpb24oZSl7XG4gICAgICAgIHZhciBib3ggPSBhbmd1bGFyLmVsZW1lbnQoZS50YXJnZXQpO1xuICAgIH1cblxuICAgIGNvbnN0IHFGb3JtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3FGb3JtVGl0bGUnKTtcbiAgICAkc2NvcGUucXVlc3Rpb25zID0gUUZhY3RvcnkubGlzdCgpO1xuICAgICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPSAwO1xuXG4gICAgJHNjb3BlLmlzQ3VycmVudFFJbmRleCA9IChpbmRleCkgPT4ge1xuICAgICAgICByZXR1cm4gJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA9PT0gaW5kZXg7XG4gICAgfVxuXG4gICAgJHNjb3BlLm5leHRRID0gKCkgPT4ge1xuICAgICAgICBxRm9ybS5zY3JvbGxJbnRvVmlldyh0cnVlKTtcbiAgICAgICAgJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA9ICgkc2NvcGUuY3VycmVudFF1ZXN0aW9uIDwgJHNjb3BlLnF1ZXN0aW9ucy5sZW5ndGggLTEpID8gKyskc2NvcGUuY3VycmVudFF1ZXN0aW9uIDogMDtcbiAgICB9XG5cbiAgICAkc2NvcGUucHJldlEgPSAoKSA9PiB7XG4gICAgICAgIHFGb3JtLnNjcm9sbEludG9WaWV3KHRydWUpO1xuICAgICAgICAkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gKCRzY29wZS5jdXJyZW50UXVlc3Rpb24gPiAwKSA/IC0tJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA6ICRzY29wZS5xdWVzdGlvbnMubGVuZ3RoIC0xO1xuICAgIH1cblxuICAgICRzY29wZS5zdWJtaXRRdWVzdGlvbmFpcmUgPSAoKSA9PiB7XG5cbiAgICAgICAgdmFyIGRhdGEgPSB7XG4gICAgICAgICAgICBxMTogJHNjb3BlLnF1ZXN0aW9uc1swXS5yZXNwb25zZSxcbiAgICAgICAgICAgIHEyOiAkc2NvcGUuZHJhd25Ub0xpc3QsXG4gICAgICAgICAgICBxMzogJHNjb3BlLmZ1cm5pdHVyZUxpc3QsXG4gICAgICAgICAgICBxNDogJHNjb3BlLnF1ZXN0aW9uc1szXS5yZXNwb25zZSxcbiAgICAgICAgICAgIHE1OiAkc2NvcGUuY29sb3JMaXN0LFxuICAgICAgICAgICAgcTY6ICRzY29wZS5jb2xvck5vTGlzdCxcbiAgICAgICAgICAgIG5hbWU6ICRzY29wZS5mb3JtRGF0YS5uYW1lLFxuICAgICAgICAgICAgZW1haWw6ICRzY29wZS5mb3JtRGF0YS5lbWFpbCxcbiAgICAgICAgICAgIHBob25lOiAkc2NvcGUuZm9ybURhdGEucGhvbmUsXG4gICAgICAgICAgICBub3RlOiAkc2NvcGUuZm9ybURhdGEubm90ZVxuICAgICAgICB9XG5cbiAgICAgICAgJGh0dHAucG9zdCgnL2FwaS9xdWVzdGlvbmFpcmUtc2lnbnVwJywgZGF0YSlcbiAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPSAwO1xuICAgICAgICAgICAgICAgICRyb290U2NvcGUucVNob3cgPSBmYWxzZTtcbiAgICAgICAgICAgICAgICBub3RpZmllci5ub3RpZnkoJ1RoYW5rIHlvdSBmb3IgeW91ciBtZXNzYWdlICcgKyByZXNwb25zZS5kYXRhLm5hbWUpO1xuICAgICAgICAgICAgICAgICRzY29wZS5xRm9ybS4kc2V0UHJpc3RpbmUoKTtcbiAgICAgICAgICAgICAgICAkc2NvcGUuY29sb3JMaXN0ID0gW107XG4gICAgICAgICAgICAgICAgJHNjb3BlLmNvbG9yTm9MaXN0ID0gW107XG4gICAgICAgICAgICAgICAgJHNjb3BlLmRyYXduVG9MaXN0ID0gW107XG4gICAgICAgICAgICAgICAgJHNjb3BlLmZ1cm5pdHVyZUxpc3QgPSBbXTtcbiAgICAgICAgICAgICAgICAkc2NvcGUuZm9ybURhdGE9IHt9O1xuICAgICAgICAgICAgfSwgKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIG5vdGlmaWVyLmVycm9yKCdUaGVyZSB3YXMgYW4gZXJyb3IgcHJvY2Vzc2luZyB5b3VyIHJlcXVlc3QuIFBsZWFzZSB0cnkgYWdhaW4nKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVGhlcmUgd2FzIGEgcHJvYmxlbSBzdWJtaXR0aW5nIHlvdXIgZm9ybSAnICsgZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgIH1cblxuICAgICRzY29wZS5teVNwbGl0ID0gZnVuY3Rpb24oc3RyaW5nLCBpKSB7XG4gICAgICAgIHZhciBhcnJheSA9IHN0cmluZy5zcGxpdCgnLScpO1xuICAgICAgICBpZihhcnJheVtpKzFdID09PSB1bmRlZmluZWQpe1xuICAgICAgICAgICAgcmV0dXJuIGFycmF5W2ldO1xuICAgICAgICB9IGVsc2UgaWYoYXJyYXlbaSsyXSA9PT0gdW5kZWZpbmVkKXtcbiAgICAgICAgICAgIHJldHVybiBhcnJheVtpXSArICcgJyArIGFycmF5W2krMV07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gYXJyYXlbaV0gKyAnICcgKyBhcnJheVtpKzFdICsgJyAnICsgYXJyYXlbaSsyXTtcbiAgICAgICAgfVxuICAgIH1cblxuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnY3VyYXRvcicsIFsnY3VyYXRvci5jb250cm9sbGVyJywgJ3F1ZXN0aW9uYWlyZS5mYWN0b3J5J10pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3F1ZXN0aW9uYWlyZS5mYWN0b3J5JywgW10pLmZhY3RvcnkoJ1FGYWN0b3J5JywgKCkgPT4ge1xuXG4gICAgdmFyIHF1ZXN0aW9ucyA9IFtcbiAgICAgICAge1xuICAgICAgICAgICAgaWQ6ICdxMScsXG4gICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgcXVlc3Rpb246ICdXaGljaCBzcGFjZSB3b3VsZCB5b3UgbGlrZSBkZXNpZ25lZCBmaXJzdD8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC00JyxcbiAgICAgICAgICAgIGFuc3dlcnM6IFsnbGl2aW5nJywgJ2JlZHJvb20nLCAnZGluaW5nJywgJ2JhdGgnLCAna2l0Y2hlbicsICdvdGhlciddLFxuICAgICAgICAgICAgcmVzcG9uc2U6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTInLFxuICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hpY2ggaW1hZ2UocykgYXJlIHlvdSBkcmF3biB0bz8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC02IGNvbC1zbS00JyxcbiAgICAgICAgICAgIGltYWdlczogW1xuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltZzEnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbWcyJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW1nMycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2ltZzQnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpbWc1JyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnaW1nNicsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgICBpZDogJ3EzJyxcbiAgICAgICAgICAgIHR5cGU6ICdjaGVja2JveCcsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doZXJlIHdvdWxkIHlvdSBzaG9wIGZvciBmdXJuaXR1cmU/JyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtNiBjb2wtc20tNCcsXG4gICAgICAgICAgICBpbWFnZXM6IFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdpa2VhJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAncGllci0xJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiAnd2VzdC1lbG0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6ICdjcmF0ZS0mLWJhcnJlbCcsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ2NiMicsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgbmFtZTogJ3Jlc3RvcmF0aW9uLWhhcmR3YXJlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlLFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTQnLFxuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnSG93IG11Y2ggbW9uZXkgYXJlIHlvdSBidWRnZXRpbmcgZm9yIHlvdXIgcHJvamVjdCwgZXhjbHVkaW5nIHRoZSBkZXNpZ24gZmVlPycsXG4gICAgICAgICAgICBjb2xzOiAnY29sLTYgY29sLXNtLTQnLFxuICAgICAgICAgICAgYW5zd2VyczogWycxLTInLCAnMi01JywgJzUtMTAnLCAnMTAtMTUnLCAnMTUtMjUnLCAnMjV1cCddLFxuICAgICAgICAgICAgcmVzcG9uc2U6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTUnLFxuICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hhdCBjb2xvcnMgd291bGQgeW91IGxpa2UgdG8gc2VlIGluIHRoZSBkZXNpZ24/JyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtY29sb3InLFxuICAgICAgICAgICAgZGVzaWduOiAnY29sb3JzJyxcbiAgICAgICAgICAgIGNvbG9yczogW1xuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQmxhY2snLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnR3JleScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdSZWQnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnT3JhbmdlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1llbGxvdycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdMaW1lJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0dyZWVuJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0FxdWEnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnVHVycXVvaXNlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1NsYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0JsdWUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnUHVycGxlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1BpbmsnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQnJvd24nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQ3JlYW0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnV2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTYnLFxuICAgICAgICAgICAgdHlwZTogJ2NoZWNrYm94JyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnU2VsZWN0IHdoaWNoIGNvbG9ycyB5b3Ugd291bGQgTk9UIHdhbnQgdG8gc2VlPycsXG4gICAgICAgICAgICBjb2xzOiAnY29sLWNvbG9yJyxcbiAgICAgICAgICAgIGNvbG9yczogW1xuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQmxhY2snLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnR3JleScsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdSZWQnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnT3JhbmdlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1llbGxvdycsXG4gICAgICAgICAgICAgICAgICAgIHNlbGVjdGVkOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgeyAgIG5hbWU6ICdMaW1lJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0dyZWVuJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0FxdWEnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnVHVycXVvaXNlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1NsYXRlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ0JsdWUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnUHVycGxlJyxcbiAgICAgICAgICAgICAgICAgICAgc2VsZWN0ZWQ6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB7ICAgbmFtZTogJ1BpbmsnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQnJvd24nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnQ3JlYW0nLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIHsgICBuYW1lOiAnV2hpdGUnLFxuICAgICAgICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICBdXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAncTcnLFxuICAgICAgICAgICAgdHlwZTogJ3RleHQnXG4gICAgICAgIH1cbiAgICBdO1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIGxpc3Q6IGZ1bmN0aW9uKCl7XG4gICAgICAgIHJldHVybiBxdWVzdGlvbnM7XG4gICAgICB9XG4gICAgfVxuXG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24nLCBbJ2NvbW1vbi5tb2RhbCcsICdjb21tb24uaW52aWV3JywgJ2NvbW1vbi5tZXRhJywgJ2NvbW1vbi5uYXYnLCAnY29tbW9uLm5vdGlmaWVyJywgJ2NvbW1vbi50b2MnLCAnY29tbW9uLnByaXZhY3knXSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnY29tbW9uLmludmlldycsIFtdKS5kaXJlY3RpdmUoJ2luVmlldycsIFsnJHdpbmRvdycsICgkd2luZG93KSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgcmVzdHJpY3Q6ICdBJyxcbiAgICAgICAgc2NvcGU6IHtcbiAgICAgICAgICAgIHZpZXdPYmo6ICc9J1xuICAgICAgICB9LFxuICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSA9PiB7XG4gICAgICAgICAgICBhbmd1bGFyLmVsZW1lbnQoJHdpbmRvdykuYmluZCgnc2Nyb2xsJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHZhciAkZWwgPSBlbGVtZW50WzBdLFxuICAgICAgICAgICAgICAgICAgICBwb3MgPSAkZWwuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XG4gICAgICAgICAgICAgICAgICAgIC8vY2hlY2sgdG8gc2VlIGlmIGFjdGl2ZSBjbGFzcywgaWYgbm90LCBzdGFydCBhbmltYXRpb25zIHdpdGgganMgYW5kIGRlZmluZSBzZWxlY3RvcnNcbiAgICAgICAgICAgICAgICBpZihwb3MudG9wICsgc2NvcGUudmlld09iai5vZmZzZXQgPCAkd2luZG93LnNjcm9sbFkpIHtcbiAgICAgICAgICAgICAgICAgICAgc2NvcGUudmlld09iai52aXNpYmxlID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgLy8gZWxzZSB7XG4gICAgICAgICAgICAgICAgLy8gICAgIHNjb3BlLnZpZXdPYmoudmlzaWJsZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIC8vIH1cbiAgICAgICAgICAgICAgICBzY29wZS4kYXBwbHkoKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG5cbiAgICB9O1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbi5tZXRhJywgW10pLmZhY3RvcnkoJ01ldGEnLCBmdW5jdGlvbigpe1xuICBsZXQgdGl0bGUgPSAnQ2VkYXIgKyBTYWdlIE9ubGluZSBJbnRlcmlvciBEZXNpZ24gU3R1ZGlvJztcbiAgbGV0IGRlc2MgPSAnV2hlcmUgRElZIG1lZXRzIHByb2Zlc3Npb25hbCBpbnRlcmlvciBkZXNpZ24uIFdlIG9mZmVyIG9ubGluZSBpbnRlcmlvciBkZXNpZ24sIHNwYWNlIHBsYW5uaW5nLCBicmFuZGluZywgcmVzaWRlbnRpYWwgYW5kIGZ1cm5pdHVyZSBkZXNpZ24uJztcblx0bGV0IGtleXdvcmRzID0gJ2JvdXRpcXVlIGludGVyaW9yIGRlc2lnbiBzdHVkaW8sIHBlcnNvbmFsbHkgdGFpbG9yZWQgc2VydmljZXMsIHZpcnR1YWwgaW50ZXJpb3IgZGVzaWduLCBvbmxpbmUgaW50ZXJpb3IgZGVzaWduLCBpbnRlcmlvciBkZXNpZ24gZm9yIGV2ZXJ5b25lLCBzaG9wIHlvdXIgcHVyY2hhc2luZyBsaXN0LCBkZXNpZ24gc3R5bGUsIHN0eWxlIHF1aXosIGNhcHRpdmF0aW5nIGNvbXBvc2l0aW9ucywgZGVjb3JhdGUgeW91ciBob21lIG9ubGluZSc7XG5cdGxldCBzb2NpYWxJbWFnZSA9ICdodHRwOi8vcmVzLmNsb3VkaW5hcnkuY29tL3d3dy1jZWRhcmFuZHNhZ2UtY29tL2ltYWdlL3VwbG9hZC92MTU0NTM0NjMyNS92Z2NlNnZ1cGpsemh5YjljemtyZS5wbmcnO1xuXHRsZXQgc2VjdXJlU29jaWFsSW1hZ2UgPSAnaHR0cHM6Ly9yZXMuY2xvdWRpbmFyeS5jb20vd3d3LWNlZGFyYW5kc2FnZS1jb20vaW1hZ2UvdXBsb2FkL3YxNTQ1MzQ2MzI1L3ZnY2U2dnVwamx6aHliOWN6a3JlLnBuZyc7XG5cbiAgcmV0dXJuIHtcbiAgICB0aXRsZTogKCkgPT4gdGl0bGUsXG4gICAgc2V0VGl0bGU6IChuZXdUaXRsZSkgPT4gdGl0bGUgPSBuZXdUaXRsZSxcbiAgICBkZXNjcmlwdGlvbjogKCkgPT4gZGVzYyxcbiAgICBzZXREZXNjOiAobmV3RGVzYykgPT4gZGVzYyA9IG5ld0Rlc2MsXG4gICAga2V5d29yZHM6ICgpID0+IGtleXdvcmRzLFxuXHRcdHNldEtleXdvcmRzOiAobmV3S2V5cykgPT4ga2V5d29yZHMgPSBuZXdLZXlzLFxuXHRcdHNvY2lhbEltYWdlOiAoKSA9PiBzb2NpYWxJbWFnZSxcblx0XHRzZXRTb2NpYWxJbWFnZTogKG5ld0ltYWdlKSA9PiBzb2NpYWxJbWFnZSA9IG5ld0ltYWdlLFxuXHRcdHNlY3VyZVNvY2lhbEltYWdlOiAoKSA9PiBzZWN1cmVTb2NpYWxJbWFnZSxcblx0XHRzZXRTZWN1cmVTb2NpYWxJbWFnZTogKG5ld0ltYWdlKSA9PiBzZWN1cmVTb2NpYWxJbWFnZSA9IG5ld0ltYWdlXG4gIH1cbn0pXG4uY29udHJvbGxlcignTWV0YUNvbnRyb2xsZXInLCBbJyRzY29wZScsICdNZXRhJywgZnVuY3Rpb24oJHNjb3BlLCBNZXRhKXtcbiAgJHNjb3BlLk1ldGEgPSBNZXRhO1xuICAkc2NvcGUubWV0YURlc2MgPSBNZXRhO1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbi5tb2RhbCcsIFtdKS5kaXJlY3RpdmUoJ2dsb2JhbE1vZGFsJywgWyckcm9vdFNjb3BlJywgZnVuY3Rpb24oJHJvb3RTY29wZSl7XG5cbiAgcmV0dXJue1xuICAgIHJlc3RyaWN0OiAnRScsXG4gICAgc2NvcGU6IHtcbiAgICAgIHNob3c6ICc9JyxcbiAgICAgIHZpZGVvOiAnQCdcbiAgICB9LFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgdHJhbnNjbHVkZTogdHJ1ZSxcbiAgICBsaW5rIDogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKXtcbiAgICAgIHNjb3BlLmRpYWxvZ1N0eWxlID0ge307XG4gICAgICBpZihhdHRycy53aWR0aClcbiAgICAgICAgc2NvcGUuZGlhbG9nU3R5bGUud2lkdGggPSBhdHRycy53aWR0aDtcbiAgICAgIGlmIChhdHRycy5oZWlnaHQpXG4gICAgICAgIHNjb3BlLmRpYWxvZ1N0eWxlLmhlaWdodCA9IGF0dHJzLmhlaWdodDtcblxuICAgICAgc2NvcGUuaGlkZU1vZGFsID0gZnVuY3Rpb24oKXtcblx0XHRcdFx0c2NvcGUuJGVtaXQoJ2Nsb3NlJyk7XG4gICAgICAgIGlmKHNjb3BlLnZpZGVvKSB7XG4gICAgICAgICAgICBjb25zdCB2aWQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnQ1MtdmlkZW8nKTtcbiAgICAgICAgICAgIHZpZC5wYXVzZSgpOyAgXG4gICAgICAgIH1cbiAgICAgICAgJHJvb3RTY29wZS5jb250YWN0U2hvdyA9IGZhbHNlO1xuICAgICAgICAkcm9vdFNjb3BlLnFTaG93ID0gZmFsc2U7XG4gICAgICAgIHNjb3BlLnNob3cgPSBmYWxzZTtcbiAgICAgIH07XG4gICAgfSxcbiAgICB0ZW1wbGF0ZVVybDogJy91aVZpZXdzL21vZGFsJ1xuICB9XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24ubmF2JywgW10pLmNvbnRyb2xsZXIoJ05hdkNvbnRyb2xsZXInLCBbJyRzY29wZScsICckcm9vdFNjb3BlJywgJyRodHRwJywgJyR3aW5kb3cnLCAnTm90aWZpZXJTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkcm9vdFNjb3BlLCAkaHR0cCwgJHdpbmRvdywgbm90aWZpZXIpe1xuXG4gICAgJHNjb3BlLmZvcm1EYXRhID0ge307XG5cbiAgICAkc2NvcGUuc2VuZENvbnRhY3QgPSBmdW5jdGlvbigpe1xuICAgICAgICAgJGh0dHAucG9zdCgnL2FwaS9jb250YWN0LWZvcm0nLCAkc2NvcGUuZm9ybURhdGEpXG4gICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKG1lc3NhZ2UsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKXtcbiAgICAgICAgICAgICAgICRyb290U2NvcGUudG9nZ2xlQ29udGFjdCgpO1xuICAgICAgICAgICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgICAgICAgICAgICBub3RpZmllci5ub3RpZnkoJ1RoYW5rIHlvdSBmb3IgeW91ciBtZXNzYWdlICcgKyBtZXNzYWdlLmRhdGEubmFtZSk7XG4gICAgICAgICAgICAgICAkc2NvcGUuZm9ybURhdGEgPSB7fTtcbiAgICAgICAgICAgfSwgZnVuY3Rpb24oZXJyb3IsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKXtcbiAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGVycm9yKTtcbiAgICAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgLy8gJHNjb3BlLmhpZGVOYXYgPSB0cnVlO1xuICAgICRzY29wZS5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICRzY29wZS50b2dnbGVNZW51ID0gZnVuY3Rpb24oKXtcbiAgICAgICAgaWYoJHdpbmRvdy5pbm5lcldpZHRoIDwgOTkyKXtcbiAgICAgICAgICAgICRzY29wZS5zZWxlY3RlZCA9ICEkc2NvcGUuc2VsZWN0ZWQ7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuc29jaWFsU2hvdyA9IGZhbHNlO1xuICAgIGlmKCR3aW5kb3cuaW5uZXJXaWR0aCA8IDk5Mil7XG5cdFx0JHNjb3BlLnNvY2lhbFNob3cgPSB0cnVlO1xuICAgIH1cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NlZGFyLWFuZC1zYWdlJykudmFsdWUoJ25vdGlmaWM4Jywgbm90aWZpYzgpO1xuXG5hbmd1bGFyLm1vZHVsZSgnY29tbW9uLm5vdGlmaWVyJywgW10pLmZhY3RvcnkoJ05vdGlmaWVyU2VydmljZScsIFsnbm90aWZpYzgnLCBmdW5jdGlvbihub3RpZmljOCl7XG5cbiAgbm90aWZpYzgoJ2NvbmZpZ3VyZScsIHtcbiAgICBsaWZlOiAzMDAwLFxuICAgIHRoZW1lOiAnYXRvbWljJyxcbiAgICB6aW5kZXg6IDk5OTksXG4gICAgdmVydGljYWxFZGdlOiAncmlnaHQnLFxuICAgIGhvcml6b250YWxFZGdlOiAndG9wJyxcbiAgICBjbG9zZVRleHQ6ICdYJ1xuICB9KTtcblxuICByZXR1cm4ge1xuICAgIG5vdGlmeTogZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgICBub3RpZmljOChtZXNzYWdlLCB7Y29sb3I6ICdwZWFyJ30pO1xuICAgICAgY29uc29sZS5sb2cobWVzc2FnZSk7XG4gICAgfSxcbiAgICBlcnJvcjogZnVuY3Rpb24obWVzc2FnZSl7XG4gICAgICBub3RpZmljOChtZXNzYWdlLCB7Y29sb3I6ICd0b21hdG8nfSk7XG4gICAgICBjb25zb2xlLmxvZyhtZXNzYWdlKTtcbiAgICB9XG4gIH1cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdjb21tb24ucHJpdmFjeScsIFtdKS5jb250cm9sbGVyKCdQcml2YWN5Q29udHJvbGxlcicsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKXtcbiAgJHNjb3BlLnRlcm1zID0gW1xuICAgICAgXCJDZWRhciBhbmQgU2FnZSBEZXNpZ24gcmVzcGVjdHMgeW91ciBwcml2YWN5IGFuZCB3aWxsIG5ldmVyIHNlbGwsIHJlbnQgb3IgcmVsZWFzZSB5b3VyIHBlcnNvbmFsIGRhdGEgdG8gYW55b25lLlwiLFxuICAgICAgXCJDZWRhciBhbmQgU2FnZSBEZXNpZ24gY29sbGVjdHMgeW91ciBuYW1lIGFuZCBlbWFpbCBhZGRyZXNzIGluIG9yZGVyIHRvIGNvbW11bmljYXRlIHRocm91Z2hvdXQgdGhlIGRlc2lnbiBwcm9jZXNzLCBhcyB3ZWxsIGFzLCBjb250aW51ZSBjb21tdW5pY2F0aW9uIHdpdGggdXBkYXRlcyB0byBvdXIgc2VydmljZXMsIG5ld3MsIHByb21vdGlvbmFsIG9mZmVyaW5ncyBhbmQgYmxvZyBwb3N0aW5ncy5cIixcbiAgICAgIFwiQ2VkYXIgYW5kIFNhZ2UgRGVzaWduIGNvbnRyYWN0cyBhIHRydXN0ZWQgdGhpcmQgcGFydHkgcGF5bWVudCBzZXJ2aWNlIChXZWxs4oCZcyBGYXJnbyBNZXJjaGFudCBTZXJ2aWNlcykgdG8gZWFzaWx5IGNvbGxlY3QgY3JlZGl0IGNhcmQgcGF5bWVudHMuIFRoaXMgZW5zdXJlcyBhIHF1aWNrIGFuZCBlYXN5IHN0YXJ0IHRvIGNvbXBsZXRpbmcgeW91ciBkZXNpZ24uXCIsXG4gICAgICBcIkNlZGFyIGFuZCBTYWdlIERlc2lnbiBtYXkgdXNlIHRoaXJkIHBhcnRpZXMsIHN1Y2ggYXMgc29jaWFsIG1lZGlhIHNvdXJjZXMgdG8gY29sbGVjdCBkYXRhIGZvciBjb252ZXJzaW9uIHRyYWNraW5nIGFuZCB0YXJnZXRlZCBhZCBzZXJ2aWNlcyB0byBiZXR0ZXIgcmVhY2ggb3VyIGF1ZGllbmNlLlwiLFxuICAgICAgXCJDb25zZW50IG9mIENlZGFyIGFuZCBTYWdlIERlc2lnbiBUZXJtcyBvZiBTZXJ2aWNlIHdpbGwgYmUgYmluZGluZyBieSB0aGUgQ2xpZW50IHNpZ25hdHVyZSBvZiB0aGlzIEUtZGVzaWduIGNvbnRyYWN0LlwiXG4gIF1cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2NvbW1vbi50b2MnLCBbXSkuY29udHJvbGxlcignVE9DQ29udHJvbGxlcicsIFsnJHNjb3BlJywgZnVuY3Rpb24oJHNjb3BlKXtcbiAgJHNjb3BlLnRlcm1zID0gW1xuICAgICAgXCJBbGwgRS1kZXNpZ24gc2VydmljZXMgYXJlIHRvIGJlIHBhaWQgaW4gZnVsbCBhbmQgYXJlIG5vbi1yZWZ1bmRhYmxlLlwiLFxuICAgICAgXCJGb3IgYSBjb21iaW5hdGlvbiBzcGFjZSAoaS5lLiBsaXZpbmcgcm9vbS1kaW5pbmcgcm9vbSBjb21iaW5hdGlvbiksIHBheW1lbnQgd2lsbCBiZSBwcm9jZXNzZWQgYXMgdHdvIHNlcGFyYXRlIHJvb21zLlwiLFxuICAgICAgXCJSb29tcyB0byBiZSBkZXNpZ25lZCBuZWVkIHRvIGJlIGNvbXBsZXRlZC4gUHJlLWNvbnN0cnVjdGlvbiByb29tcyBhcmUgbm90IGFjY2VwdGVkLlwiLFxuICAgICAgXCJQcm9kdWN0IHNvdXJjaW5nIGlzIGxpbWl0ZWQgdG8gdGhlIFVuaXRlZCBTdGF0ZXMuXCIsXG4gICAgICBcIkNlZGFyIGFuZCBTYWdlIERlc2lnbiBjYW5ub3QgZ3VhcmFudGVlIHRoZSBwcmljZXMgb3IgYXZhaWxhYmlsaXR5IG9mIHByb2R1Y3RzIHJlY29tbWVuZGVkIGluIHRoZSBwdXJjaGFzZSBsaXN0LlwiLFxuICAgICAgXCJEZXNpZ24gc2VydmljZXMgYmVnaW4gb25jZSBDZWRhciBhbmQgU2FnZSBEZXNpZ24gaGFzIHJlY2VpcHQgb2YgdGhlIENsaWVudCBRdWVzdGlvbm5haXJlLCBDbGllbnQgU2VydmljZSBBZ3JlZW1lbnQgYW5kIHBheW1lbnQgaGFzIHByb2Nlc3NlZC4gQW55IG1vZGlmaWNhdGlvbnMgdG8gdGhlIGFncmVlZCB1cG9uIHNlcnZpY2UgbWF5IGJlIGF2YWlsYWJsZSBhdCBhbiBhZGRpdGlvbmFsIGNvc3QgdG8gYmUgYWdyZWVkIHVwb24gaW4gd3JpdGluZyBiZXR3ZWVuIHRoZSBDbGllbnQgYW5kIENlZGFyIGFuZCBTYWdlIERlc2lnbi5cIixcbiAgICAgIFwiVGhlIENsaWVudCBhZ3JlZXMgdGhhdCBmb2xsb3ctdXAgcXVlc3Rpb25zIGFyZSBhY2NlcHRlZCBieSBvbmxpbmUgY29tbXVuaWNhdGlvbiBvbmx5LCB1bmxlc3Mgb3RoZXJ3aXNlIGRpc2N1c3NlZCBiZXR3ZWVuIHRoZSBDbGllbnQgYW5kIENlZGFyIGFuZCBTYWdlIERlc2lnbi4gVGhlcmUgd2lsbCBiZSBubyBpbi1wZXJzb24gdmlzaXRzLlwiLFxuICAgICAgXCJFLWRlc2lnbiBkZWxpdmVyYWJsZXMgd2lsbCBiZSBwcm92aWRlZCBhcyBleHBlZGl0aW91c2x5IGFzIGlzIGNvbnNpc3RlbnQgd2l0aCB0aGUgcHJvZmVzc2lvbmFsIGRlc2lnbiBjb25jZXB0dWFsaXphdGlvbiBhbmQgcHJvY2Vzcy5cIixcbiAgICAgIFwiRS1kZXNpZ24gaXMgYW4gb25saW5lLCB2aXJ0dWFsIHNlcnZpY2Ugb25seS4gQ2VkYXIgYW5kIFNhZ2UgRGVzaWduIHN1Z2dlc3Rpb25zIGFyZSBtYWRlIHB1cmVseSBvbiBhIHN1Z2dlc3Rpb24gYmFzaXMuXCIsXG4gICAgICBcIkNlZGFyIGFuZCBTYWdlIERlc2lnbiB3aWxsIHN0cml2ZSB0byBhY2NvbW1vZGF0ZSB0aGUgY2xpZW504oCZcyBuZWVkcy4gT25lIHJldmlzaW9uIG9mIHRoZSBkZXNpZ24gaXMgcHJvdmlkZWQgd2l0aGluIHRoZSBFLWRlc2lnbiBwYWNrYWdlLiBPbmNlIHRoZSBmaW5hbCBkZXNpZ24gaXMgZGVsaXZlcmVkLCB0aGVyZSB3aWxsIGJlIG5vIGZ1cnRoZXIgbW9kaWZpY2F0aW9ucyBldmVuIGluIHRoZSBldmVudCBvZiBkaXNwbGVhc3VyZS5cIixcbiAgICAgIFwiQ2VkYXIgYW5kIFNhZ2UgRGVzaWduIHNoYWxsIG5vdCBiZSBoZWxkIHJlc3BvbnNpYmxlIGZvciBhbnkgaW5hY2N1cmF0ZSBkaW1lbnNpb25zIHByb3ZpZGVkIGJ5IHRoZSBjbGllbnQuXCIsXG4gICAgICBcIkNlZGFyIGFuZCBTYWdlIERlc2lnbiBjYW5ub3QgZ3VhcmFudGVlIHRoZSBzaXplLCBtYXRlcmlhbCwgY29sb3IsIHRleHR1cmUgb3Igc291cmNlIHRvIGJlIGNvbXBsZXRlbHkgYWNjdXJhdGUuXCIsXG4gICAgICBcIklmIGNvbnN0cnVjdGlvbiBpcyBwbGFubmVkLCBpdCBpcyBhZHZpc2FibGUgdG8gc2VwYXJhdGVseSBjb250cmFjdCB0aGUgc2VydmljZXMgb2YgYSBsaWNlbnNlZCBjb250cmFjdG9yLiBBbGwgZmxvb3IgcGxhbnMgYW5kIHJlbmRlcmluZ3Mgc2hhbGwgbm90IGJlIHVzZWQgYXMgY29uc3RydWN0aW9uIGRvY3VtZW50cyBvciBmb3IgZW5naW5lZXJpbmcgb3IgYXJjaGl0ZWN0dXJhbCBwdXJwb3Nlcy4gVGhlc2UgZGVsaXZlcmFibGVzIGFyZSBjb25jZXB0dWFsIG9ubHkgaW4gb3JkZXIgdG8gc2V0IGZvcnRoIHRoZSBpbnRlbmRlZCBkZXNpZ24uXCIsXG4gICAgICBcIkNlZGFyIGFuZCBTYWdlIERlc2lnbiBzaGFsbCBub3QgYmUgaGVsZCByZXNwb25zaWJsZSBmb3IgdGhlIHB1cmNoYXNlIG9mIHJlY29tbWVuZGVkIHByb2R1Y3RzLCBkZWxpdmVyeSBhcnJhbmdlbWVudCBvZiByZXBhaXJzIHRvIGFueSBkYW1hZ2UsIHJlcGxhY2VtZW50IG9mIGl0ZW1zIG9yIGZyZWlnaHQgY2xhaW1zIHJlbGF0ZWQgdG8gRS1kZXNpZ24gcmVjb21tZW5kZWQgcHVyY2hhc2VzLlwiLFxuICAgICAgXCJDZWRhciBhbmQgU2FnZSBEZXNpZ24gc2hhbGwgbm90IGJlIGhlbGQgcmVzcG9uc2libGUgZm9yIHRoZSBtZWFucywgbWV0aG9kcyBvciBwcm9jZWR1cmVzIG9mIGNvbnN0cnVjdGlvbiwgZmFicmljYXRpb24sIGRlbGl2ZXJ5LCBhc3NlbWJseSwgaW5zdGFsbGF0aW9uIG9yIHNhZmV0eSBwcmVjYXV0aW9ucyBvciBhbnkgb3RoZXIgd29yayBpbnRlbmRlZCBmb3IgdGhlIGV4ZWN1dGlvbiBvZiB0aGUgY29tcGxldGVkIEUtZGVzaWduIHBhY2thZ2UuIENlZGFyIGFuZCBTYWdlIHNoYWxsIGFsc28gbm90IGJlIGhlbGQgcmVzcG9uc2libGUgZm9yIGZhaWx1cmUgb2YgYW55IHN1cHBsaWVyLCBzdWJjb250cmFjdG9yLCBjb250cmFjdG9yLCBvciBhbnkgb3RoZXIgcGVyc29uIHBlcmZvcm1pbmcgd29yayByZWxhdGVkIHRvIHRoZSBFLWRlc2lnbiBwYWNrYWdlIHRvIG1lZXQgZGVhZGxpbmVzIG9yIGFncmVlZCB1cG9uIHNjaGVkdWxlcyBvciBjb21wbGV0aW9uIG9mIHdvcmsuXCIsXG4gICAgICBcIkNlZGFyIGFuZCBTYWdlIERlc2lnbiByZXNlcnZlcyB0aGUgcmlnaHQgdG8gdXNlIHRoZSBpbnRlbGxlY3R1YWwgcHJvcGVydHkgb2YgdGhlIGRlbGl2ZXJhYmxlcyBpbmNsdWRpbmcgdGhlIG1vb2QgYm9hcmQsIHBlcnNvbmFsaXplZCBmbG9vciBwbGFuIGFuZCBwdXJjaGFzZSBsaXN0IGZvciBtYXJrZXRpbmcsIHdlYnNpdGVzIG9yIGJsb2dzLlwiLFxuICAgICAgXCJUaGUgQ2xpZW50IGFncmVlcyB0byBwcm92aWRlIHBob3RvZ3JhcGhzIG9mIHRoZSBFLWRlc2lnbiBwcm9qZWN0IGZvbGxvd2luZyBjb21wbGV0aW9uIGZvciBtYXJrZXRpbmcsIHdlYnNpdGVzIG9yIGJsb2dzLlwiXG4gIF1cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ2Jhbm5lci5kaXInLCBbXSkuZGlyZWN0aXZlKCdwYWdlQmFubmVyJywgKCkgPT4ge1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnRScsXG4gICAgdGVtcGxhdGVVcmw6ICcvdWlWaWV3cy9iYW5uZXInLFxuICAgIHJlcGxhY2U6IHRydWUsXG4gICAgc2NvcGU6IHsgYmdJbWFnZTogJ0AnIH1cbiAgfTtcbn0pO1xuIiwiXG5hbmd1bGFyLm1vZHVsZSgnYm94LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCdib3hIZWlnaHQnLCBbJyR3aW5kb3cnLCAnJHRpbWVvdXQnLCBmdW5jdGlvbiAoJHdpbmRvdywgJHRpbWVvdXQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXN0cmljdDogJ0EnLFxuICAgICAgICBsaW5rOiAoc2NvcGUsIGVsZW0sIGF0dHJzKSA9PiB7XG4gICAgICAgICAgJHRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgc2NvcGUubmV3SGVpZ2h0ID0gZWxlbVswXS5vZmZzZXRIZWlnaHQ7XG4gICAgICAgICAgfSwgMTAwMCk7XG4gICAgICAgICAgYW5ndWxhci5lbGVtZW50KCR3aW5kb3cpLmJpbmQoJ3Jlc2l6ZScsICgpID0+IHtcbiAgICAgICAgICAgIHNjb3BlLiRhcHBseSgoKSA9PiB7XG4gICAgICAgICAgICAgIHNjb3BlLm5ld0hlaWdodCA9IGVsZW1bMF0ub2Zmc2V0SGVpZ2h0O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9O1xufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgndGFyZ2V0LmhlaWdodC5kaXInLCBbXSkuZGlyZWN0aXZlKCd0YXJnZXRIZWlnaHQnLCBmdW5jdGlvbigpe1xuICByZXR1cm4ge1xuICAgIHJlc3RyaWN0OiAnQScsXG4gICAgbGluazogKHNjb3BlLCBlbGVtLCBhdHRycykgPT4ge1xuICAgICAgc2NvcGUuJHdhdGNoKCduZXdIZWlnaHQnLCAobmV3Viwgb2xkVikgPT4ge1xuICAgICAgICAvL2NvbnNvbGUubG9nKCdvbGQgdmFsdWUgJyArIG9sZFYsICduZXcgdmFsdWUgJyArIG5ld1YpO1xuICAgICAgICBlbGVtLmF0dHIoJ3N0eWxlJywgJ2hlaWdodDogJyArIG5ld1YgKyAncHgnKTtcbiAgICAgIH0pXG4gICAgfVxuICB9XG59KTtcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignSG9tZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckd2luZG93JywgJyRodHRwJywgJ1NlcnZpY2VGYWN0b3J5JywgJ01ldGEnLCBmdW5jdGlvbigkc2NvcGUsICR3aW5kb3csICRodHRwLCBTZXJ2aWNlRmFjdG9yeSwgTWV0YSl7XG5cbiAgICBNZXRhLnNldFRpdGxlKCdIb21lIHwgQ2VkYXIgKyBTYWdlIERlc2lnbiB8IE9ubGluZSBJbnRlcmlvciBEZXNpZ24gU3R1ZGlvJyk7XG4gICAgTWV0YS5zZXREZXNjKCdCZWdpbiB5b3VyIGludGVyaW9yIGRlc2lnbiBwcm9qZWN0IHdpdGggb3VyIHBlcnNvbmFsbHkgdGFpbG9yZWQgc2VydmljZXMuIFdlIGNyZWF0ZSBjYXB0aXZhdGluZyBjb21wb3NpdGlvbnMgYnkgY3VyYXRpbmcgYSBiYWxhbmNlZCBkZXNpZ24uJyk7XG5cdFx0TWV0YS5zZXRLZXl3b3JkcygnYm91dGlxdWUgaW50ZXJpb3IgZGVzaWduIHN0dWRpbywgcGVyc29uYWxseSB0YWlsb3JlZCBzZXJ2aWNlcywgdmlydHVhbCBpbnRlcmlvciBkZXNpZ24sIG9ubGluZSBpbnRlcmlvciBkZXNpZ24sIGludGVyaW9yIGRlc2lnbiBmb3IgZXZlcnlvbmUsIHNob3AgeW91ciBwdXJjaGFzaW5nIGxpc3QsIGRlc2lnbiBzdHlsZSwgc3R5bGUgcXVpeiwgY2FwdGl2YXRpbmcgY29tcG9zaXRpb25zLCBkZWNvcmF0ZSB5b3VyIGhvbWUgb25saW5lJyk7XG5cdFx0XG5cdFx0JGh0dHAuZ2V0KCcvYXBpL2hvbWUvY29udGVudCcpLnRoZW4oKHJlcyk9PiB7XG5cdFx0XHQkc2NvcGUuY29udGVudCA9IHJlcy5kYXRhWzBdO1xuXHRcdFx0aWYgKCRzY29wZS5jb250ZW50LnNlb0ltYWdlKSB7XG5cdFx0XHRcdE1ldGEuc2V0U29jaWFsSW1hZ2UoJHNjb3BlLmNvbnRlbnQuc2VvSW1hZ2UudXJsKTtcblx0XHRcdFx0TWV0YS5zZXRTZWN1cmVTb2NpYWxJbWFnZSgkc2NvcGUuY29udGVudC5zZW9JbWFnZS5zZWN1cmVfdXJsKTtcblx0XHRcdH1cblx0XHR9KTtcblxuICAgICRzY29wZS5zY3JlZW5XID0gJHdpbmRvdy5pbm5lcldpZHRoO1xuICAgICRzY29wZS52aWRlb1Nob3cgPSBmYWxzZTtcbiAgICAkc2NvcGUuc2VydmljZXMgPSBTZXJ2aWNlRmFjdG9yeS5saXN0KCk7XG4gICAgJHNjb3BlLmhvbWVTZXJ2aWNlcyA9IFNlcnZpY2VGYWN0b3J5LmhvbWVMaXN0KCk7XG4gICAgJHNjb3BlLnZpZGVvSGVpZ2h0ID0gKCRzY29wZS5zY3JlZW5XIDwgNzY4KSA/ICc1MCUnIDogJzkwJSc7XG5cbiAgICAkc2NvcGUud2VsY29tZSA9IHtcbiAgICAgIHZpc2libGU6IGZhbHNlLFxuICAgICAgb2Zmc2V0OiAtMjAwXG4gICAgfTtcblxuICAgICRzY29wZS5kcmF3aW5nRGF0YSA9IHt9O1xuXG4gICAgJHNjb3BlLnRvZ2dsZVZpZGVvID0gZnVuY3Rpb24oKSB7XG4gICAgICAkc2NvcGUudmlkZW9TaG93ID0gISRzY29wZS52aWRlb1Nob3c7XG4gICAgfVxuXG4gICAgJHNjb3BlLm9wdGlvbnMgPSB7XG4gICAgICAgb3JpZ2luOiAnbGVmdCcsXG4gICAgICAgZGlzdGFuY2U6ICcxNTBweCcsXG4gICAgICAgZWFzaW5nOiAnZWFzZS1pbi1vdXQnLFxuICAgICAgIGRlbGF5OiAzMCxcbiAgICAgICBzY2FsZTogMSxcbiAgICAgICBkdXJhdGlvbjogMTAwMCxcbiAgICAgICAvLyByZXNldDogdHJ1ZSxcbiAgICAvLyAgICBhZnRlclJldmVhbDogZnVuY3Rpb24gKGRvbUVsKSB7XG4gICAgLy8gICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiZ2FsbGVyeVwiKS5zdHlsZS52aXNpYmlsaXR5ID0gXCJ2aXNpYmxlXCI7XG4gICAgLy8gICAgfSxcbiAgICAgICBzZXF1ZW5jZToge1xuICAgICAgICAgIHNlbGVjdG9yOiAnLmJveC1jb250YWluZXInLFxuICAgICAgICAgIGludGVydmFsOiAzMDBcbiAgICAgICAgfVxuICAgIH07XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdob21lJywgWydob21lLmNvbnRyb2xsZXInLCAnYm94LmhlaWdodC5kaXInLCAndGFyZ2V0LmhlaWdodC5kaXInLCAnYmFubmVyLmRpciddKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdsYW5kaW5nLXBhZ2UuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdMYW5kaW5nUGFnZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckd2luZG93JywgJyRodHRwJywgJ01ldGEnLCAnTm90aWZpZXJTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkd2luZG93LCAkaHR0cCwgTWV0YSwgbm90aWZpZXIpe1xuXG4gICAgTWV0YS5zZXRUaXRsZSgnTGFuZGluZyBQYWdlJyk7XG4gICAgJHNjb3BlLnNpZ251cEZvcm0gPSB7XG4gICAgICAgIGZpcnN0TmFtZTonJyxcbiAgICAgICAgbGFzdG5hbWU6ICcnLFxuICAgICAgICBlbWFpbDogJycsXG4gICAgICAgIGluY2x1ZGU6IHRydWVcbiAgICB9O1xuICAgICRzY29wZS5pc01vYmlsZSA9ICgkd2luZG93LmlubmVyV2lkdGggPCA3NjgpID8gdHJ1ZSA6IGZhbHNlO1xuXG4gICAgJHNjb3BlLnNpZ251cCA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICAkaHR0cC5wb3N0KCcvYXBpL2ZyZWUtcm9vbS1zaWdudXAnLCAkc2NvcGUuc2lnbnVwRm9ybSlcbiAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24obWVzc2FnZSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpe1xuICAgICAgICAgICAgICAgbm90aWZpZXIubm90aWZ5KCdUaGFuayB5b3UgZm9yIHNpZ25pbmcgdXAhJyk7XG4gICAgICAgICAgICAgICAkc2NvcGUuc2lnbnVwRm9ybSA9IHt9O1xuICAgICAgICAgICB9LCBmdW5jdGlvbihlcnJvciwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpe1xuICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyb3IpO1xuICAgICAgICAgICB9KTtcbiAgICB9XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdwcmljaW5nLWRldGFpbC5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ1ByaWNpbmdEZXRhaWxDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHJvb3RTY29wZScsICckd2luZG93JywgJyRzdGF0ZVBhcmFtcycsICdQcmljaW5nRmFjdG9yeScsICgkc2NvcGUsICRyb290U2NvcGUsICR3aW5kb3csICRzdGF0ZVBhcmFtcywgUHJpY2luZ0ZhY3RvcnkpID0+IHtcblx0XG5cdCRzY29wZS5sZXZlbCA9ICRzdGF0ZVBhcmFtcy5sZXZlbDtcblxuXHQkc2NvcGUuc2VydmljZXMgPSBQcmljaW5nRmFjdG9yeS5saXN0KClcblx0XHQuZmlsdGVyKHNlcnZpY2UgPT4gc2VydmljZS5sZXZlbC5pbmNsdWRlcygkc2NvcGUubGV2ZWwpKTtcblxuICAkc2NvcGUuc2VsZWN0ZWRTZXJ2aWNlID0gdW5kZWZpbmVkO1xuXG4gICRzY29wZS5zaG93U2xpZGUgPSBmdW5jdGlvbihzbHVnKSB7XG4gICAgJHNjb3BlLnNlbGVjdGVkU2VydmljZSA9IHNsdWc7XG4gIH1cblxuICAkc2NvcGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgICAkc2NvcGUuc2VsZWN0ZWRTZXJ2aWNlID0gdW5kZWZpbmVkO1xuICB9XG5cbiAgJHNjb3BlLmNvbnRhY3RVcyA9IGZ1bmN0aW9uKCkge1xuICAgICRyb290U2NvcGUudG9nZ2xlQ29udGFjdCgpO1xuICB9XG5cbiAgJHNjb3BlLnZpZGVvSGVpZ2h0ID0gKCRzY29wZS5zY3JlZW5XIDwgNzY4KSA/ICc1MCUnIDogJzkwJSc7XG4gICRzY29wZS5zaG93UmVuZGVyaW5nID0gZmFsc2U7XG4gICRzY29wZS50b2dnbGVSZW5kZXJpbmcgPSBmdW5jdGlvbigpIHtcbiAgICAkc2NvcGUuc2hvd1JlbmRlcmluZyA9IHRydWU7XG4gIH1cblxuICAkc2NvcGUuYm9va1Nob3cgPSBmYWxzZTtcbiAgJHNjb3BlLnRvZ2dsZUJvb2sgPSBmdW5jdGlvbigpe1xuICAgICRzY29wZS5ib29rU2hvdyA9IHRydWU7XG4gIH1cblxuICAgICAgdmFyIGdldENsb3Nlc3QgPSBmdW5jdGlvbiAoIGVsZW0sIHNlbGVjdG9yICkge1xuICAgICAgICAgIGZvciAoIDsgZWxlbSAmJiBlbGVtICE9PSBkb2N1bWVudDsgZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSApIHsgLy8gR2V0IGNsb3Nlc3QgbWF0Y2hcbiAgICAgICAgICAgICAgaWYgKCBlbGVtLm1hdGNoZXMoIHNlbGVjdG9yICkgKSByZXR1cm4gZWxlbTtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9O1xuXG4gICAgICAkc2NvcGUubmV4dFBhZ2UgPSBmdW5jdGlvbigpe1xuICAgICAgICAgIGFuZ3VsYXIuZWxlbWVudChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWN0aXZlJykpXG4gICAgICAgICAgICAgIC5yZW1vdmVDbGFzcygnYWN0aXZlJylcbiAgICAgICAgICAgICAgLmFkZENsYXNzKCdmbGlwcGVkJylcbiAgICAgICAgICAgICAgLm5leHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKSlcbiAgICAgICAgICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKTtcbiAgICAgIH1cblxuICAgICAgJHNjb3BlLnByZXZQYWdlID0gZnVuY3Rpb24oKXtcbiAgICAgICAgICAkKCcuZmxpcHBlZCcpXG4gICAgICAgICAgICAubGFzdCgpXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ2ZsaXBwZWQnKVxuICAgICAgICAgICAgLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICAgICAgLnNpYmxpbmdzKCcucGFnZScpXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgICAgICAgICAvLyB2YXIgZWxlbSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mbGlwcGVkJyk7XG4gICAgICAgICAgICAgIC8vLmxhc3QoKVxuICAgICAgICAgICAgICAvLyBlbGVtLnJlbW92ZUNsYXNzKCdmbGlwcGVkJylcbiAgICAgICAgICAgICAgLy8gLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICAgICAgICAvLyAubmV4dChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpKVxuICAgICAgICAgICAgICAvLyAucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpO1xuICAgICAgfVxuXG4gICAgICAkc2NvcGUuY3VycmVudFBhZ2UgPSAwO1xuXG4gICAgICAkc2NvcGUuYnJhbmRpbmdDb250YWN0ID0gZnVuY3Rpb24oKSB7XG4gICAgICAgICRzY29wZS5zaG93UmVuZGVyaW5nID0gZmFsc2U7XG4gICAgICAgICRzY29wZS5ib29rU2hvdyA9IGZhbHNlO1xuICAgICAgICAkc2NvcGUuY29udGFjdFVzKCk7XG4gICAgICB9XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdwcmljaW5nLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignUHJpY2luZ0NvbnRyb2xsZXInLCBbJ01ldGEnLCAoTWV0YSkgPT4ge1xuXG4gIE1ldGEuc2V0VGl0bGUoXCJEZXNpZ24gUGFja2FnZSBPcHRpb25zIGFuZCBQcmljZXMgfCBDZWRhciArIFNhZ2UgRGVzaWduIHwgT25saW5lIEludGVyaW9yIERlc2lnbiBTdHVkaW9cIik7XG4gIE1ldGEuc2V0RGVzYyhcIkRlc2lnbmluZyBmb3IgeW91ciBwZXJzb25hbCBzdHlsZSBhdCBhbnkgYnVkZ2V0IHRocm91Z2ggb3VyIHZhcmlvdXMgZGVzaWduIHBhY2thZ2Ugb3B0aW9ucy4gIExlYXJuIG1vcmUgYWJvdXQgb3VyIHByaWNlcy4gIFlvdSBpbWFnaW5lIGl0LCB3ZSBkZXNpZ24gaXQuXCIpO1xuXHRNZXRhLnNldEtleXdvcmRzKCdUcmFuc3BhcmVudCBwcmljaW5nLCB0cmFuc2Zvcm0gdGhlIHdheSB0aGF0IHlvdSBsaXZlLCBvbmxpbmUgaW50ZXJpb3IgZGVzaWduLCBwcm9mZXNzaW9uYWwgb3BpbmlvbiwgdHJhZGl0aW9uYWwgaW50ZXJpb3IgZGVzaWduIHNlcnZpY2UsIHBlcnNvbmFsbHkgdGFpbG9yZWQgZGVzaWduIHNlcnZpY2UsIHN0YWdpbmcgY29uc3VsdGF0aW9uLCAzZCByZW5kZXJpbmcsIGJyYW5kaW5nIGJvb2tsZXRzLCBjbGllbnQgZXhwZWN0YXRpb25zJyk7XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdwcmljaW5nLmZhY3RvcnknLCBbXSkuZmFjdG9yeSgnUHJpY2luZ0ZhY3RvcnknLCAoKSA9PiB7XG4gIHZhciBzZXJ2aWNlcyA9IFtcblx0XHR7XG4gICAgICBuYW1lOiAnSU4tSE9NRSBERVNJR04nLFxuICAgICAgc2x1ZzogJ3RoZS13b3JrcycsXG4gICAgICBpbWc6ICdpbWcvcHJpY2luZy90aGUtd29ya3MucG5nJyxcbiAgICAgIGltZ0FsdDogJ1RoZSBXb3JrcycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvZmxvb3ItcGxhbi5wbmcnLFxuICAgICAgc3ViSGVhZDogJ21ha2luZyB5b3VyIHNwYWNlIGZ1bmN0aW9uYWwnLFxuXHRcdFx0ZGVzYzogXCJJIHdpbGwgY29tZSB0byB5b3VyIGhvbWUgb3IgY29tbWVyY2lhbCBzcGFjZSB0byBnYXRoZXIgaW5mb3JtYXRpb24gcmVnYXJkaW5nIHRoZSBkZXNpZ24uIFRoZSBkZXNpZ24gcHJvY2VzcyB3aWxsIGJlIGNvbmNlcHR1YWxpemVkLCBmdXJuaXR1cmUsIGZpbmlzaGVzIGFuZCBkZWNvciB3aWxsIGJlIHNlbGVjdGVkIGFuZCBhcHByb3ZlZCBieSB0aGUgY2xpZW50LCBhbmQgaW5zdGFsbGF0aW9uIHdpbGwgb2NjdXIuICBDb25jaWVyZ2UgZGVzaWduIGlzIGEgbW92ZS1pbiBzZXJ2aWNlIGZvciBvYnRhaW5pbmcgbmVjZXNzYXJ5IGl0ZW1zLCBzdWNoIGFzIGtpdGNoZW4gYW5kIGJhdGggYWNjZXNzb3JpZXMgbGlrZSBkaXNoZXMgYW5kIHNob3dlciBjdXJ0YWlucy5cIixcblx0XHRcdGxldmVsOiBbJ3BlcnNvbmFsJywgJ2FsbCddLFxuICAgICAgcHJpY2U6ICckMTEwL0hSJyxcbiAgICAgIGJ1dHRvbjoge1xuICAgICAgICB0eXBlOiAnY29udGFjdCcsXG4gICAgICAgIHRleHQ6ICdjb250YWN0IHRvIGdldCBzdGFydGVkJyxcbiAgICAgICAgbGluazogJ2NvbnRhY3QnXG4gICAgICB9XG5cdFx0fSxcbiAgICB7XG4gICAgICBuYW1lOiAnU1RBR0lORyBDT05TVUxUQVRJT04nLFxuICAgICAgc2x1ZzogJ3N0YWdpbmcnLFxuICAgICAgaW1nOiAnaW1nL3ByaWNpbmcvc3RhZ2luZy1jb25zdWx0LnBuZycsXG4gICAgICBpbWdBbHQ6ICdTdGFnaW5nIENvbnN1bHRhdGlvbicsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvZmxvb3ItcGxhbi5wbmcnLFxuICAgICAgc3ViSGVhZDogJ21ha2luZyB5b3VyIHNwYWNlIGZ1bmN0aW9uYWwnLFxuICAgICAgaW5jbHVkZWQ6IFsnU3RhZ2luZyBDb25zdWxhdGlvbicsICczRCBSZW5kZXJpbmdzJywgJ0JyYW5kaW5nJ10sXG4gICAgICBkZXNjOiBcIlRoaXMgb25lJ3MgZm9yIG15IHJlYWx0b3IgZnJpZW5kcy4gRG8geW91IGhhdmUgYSBjbGllbnQgd2l0aCBhIGJhZCBkZXNpZ24/IEkgZ2l2ZSBkZXNpZ24gYWR2aWNlIHRvIHlvdXIgY2xpZW50IHRvIGNyZWF0ZSBhIHdlbGNvbWluZyBlbnZpcm9ubWVudCBmb3IgeW91ciBvcGVuIGhvdXNlLlwiLFxuXHRcdFx0cHJpY2U6ICckMTAwL0hSJyxcblx0XHRcdGxldmVsOiBbJ3Byb2Zlc3Npb25hbCcsICdhbGwnXSxcbiAgICAgIGJ1dHRvbjoge1xuICAgICAgICB0eXBlOiAnY29udGFjdCcsXG4gICAgICAgIHRleHQ6ICdjb250YWN0IHRvIGdldCBzdGFydGVkJyxcbiAgICAgICAgbGluazogJ2NvbnRhY3QnXG4gICAgICB9XG5cdFx0fSxcblx0XHR7XG4gICAgICBuYW1lOiAnVEhFIENVUkFUT1InLFxuICAgICAgc2x1ZzogJ2N1cmF0b3InLFxuICAgICAgaW1nOiAnaW1nL3ByaWNpbmcvY3VyYXRvci5wbmcnLFxuICAgICAgaW1nQWx0OiAnVGhlIEN1cmF0b3InLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL21hc3Rlci1ici5wbmcnLFxuICAgICAgc3ViSGVhZDogJ2FtcGxpZnlpbmcgY2xpZW50IHNwYWNlcycsXG4gICAgICBpbmNsdWRlZDogWydDdXJhdG9yJywgJ1RoZSBXb3JrcycsICdQcm9mZXNzaW9uYWwgT3B0aW9uJywgXCJDbGllbnRgcyBDaG9pY2VcIl0sXG4gICAgICBkZXNjOiBcIlRoZSBjbGllbnQgd29ya3Mgd2l0aCBtZSByZW1vdGVseSBieSBzZW5kaW5nIHBob3RvcyBvZiB0aGUgc3BhY2UgdG8gYmUgZGVzaWduZWQsIGRpbWVuc2lvbnMsIGFuZCBhbnkgaW5zcGlyYXRpb24uIENlZGFyICsgU2FnZSBEZXNpZ24gcHJvdmlkZXMgYSBtb29kIGJvYXJkLCBmbG9vciBwbGFuLCBhbmQgcHVyY2hhc2UgbGlzdC4gVGhpcyBpcyBhIHZlcnkgZmxleGlibGUgcHJvZ3JhbSBhbmQgYWxsb3dzIHRoZSBjbGllbnQgdG8gbWFrZSB0aGVpciBkZXNpZ24gY29tZSB0byBsaWZlIG9uIHRoZWlyIHRpbWUuXCIsXG5cdFx0XHRwcmljZTogJyQ2L1NxIEZ0Jyxcblx0XHRcdGxldmVsOiBbJ3BlcnNvbmFsJywgJ2FsbCddLFxuICAgICAgYnV0dG9uOiB7XG4gICAgICAgIHR5cGU6ICdsaW5rJyxcbiAgICAgICAgdGV4dDogJ0xlYXJuIE1vcmUnLFxuICAgICAgICBsaW5rOiAnY3VyYXRvcidcbiAgICAgIH1cblx0XHR9LFxuXHRcdHtcbiAgICAgIG5hbWU6ICdUSEUgUFJPRkVTU0lPTkFMIE9QSU5JT04nLFxuICAgICAgc2x1ZzogJ3Byb2Zlc3Npb25hbCcsXG4gICAgICBpbWc6ICdpbWcvcHJpY2luZy9wcm9mZXNzaW9uYWwtb3Bpbmlvbi5wbmcnLFxuICAgICAgaW1nQWx0OiAnVGhlIFByb2Zlc3Npb25hbCBPcHRpb24nLFxuICAgICAgYmFubmVyOiAnaW1nL3NlcnZpY2VzL2Zsb29yLXBsYW4ucG5nJyxcbiAgICAgIHN1YkhlYWQ6ICdtYWtpbmcgeW91ciBzcGFjZSBmdW5jdGlvbmFsJyxcbiAgICAgIGRlc2M6IFwiSSBjb21lIHRvIHRoZSBjbGllbnQncyBob21lIG9yIHJldGFpbCBzcGFjZSB0byBnaXZlIGRlc2lnbiB0aXBzIGFuZCByZWNvbW1lbmRhdGlvbnMgcmVnYXJkaW5nIHRoZSBjbGllbnQncyBjdXJyZW50IGRlc2lnbiBhbmQgcG9zc2libGUgZnV0dXJlIGRlc2lnbi5cIixcblx0XHRcdHByaWNlOiAnJDEwMC9IUicsXG5cdFx0XHRsZXZlbDogWydwZXJzb25hbCcsICdhbGwnXSxcbiAgICAgIGJ1dHRvbjoge1xuICAgICAgICB0eXBlOiAnY29udGFjdCcsXG4gICAgICAgIHRleHQ6ICdjb250YWN0IHRvIGdldCBzdGFydGVkJyxcbiAgICAgICAgbGluazogJ2NvbnRhY3QnXG4gICAgICB9XG5cdFx0fSxcblx0XHR7XG4gICAgICBuYW1lOiAnM0QgUkVOREVSSU5HUycsXG4gICAgICBzbHVnOiAnM2QtcmVuZGVyaW5ncycsXG4gICAgICBpbWc6ICdpbWcvcHJpY2luZy8zZC1yZW5kZXJpbmdzLnBuZycsXG4gICAgICBpbWdBbHQ6ICczRCBSZW5kZXJpbmdzJyxcbiAgICAgIGJhbm5lcjogJ2ltZy9zZXJ2aWNlcy9mbG9vci1wbGFuLnBuZycsXG4gICAgICBzdWJIZWFkOiAnbWFraW5nIHlvdXIgc3BhY2UgZnVuY3Rpb25hbCcsXG4gICAgICBkZXNjOiBcIlNldCB5b3VyIGxpc3RpbmcgYXBhcnQgZnJvbSB0aGUgY29tcGV0aXRpb24gd2l0aCAzRCBSZW5kZXJpbmdzLiBXaXRoIG15IGhlbHAsIHlvdSBjYW4gZ2FpbiBhbiBlZGdlIGluIGRpZ2l0YWwgbWFya2V0aW5nLiBZb3UgY2FuIGV2ZW4gc2F2ZSB0aW1lIGFuZCBtb25leSBieSBoYXZpbmcgeW91ciBjbGllbnRzIHZpc2l0IGxpc3RpbmdzIHZpcnR1YWxseSBmaXJzdC4gM0QgcmVuZGVyaW5ncyBhcmUgYWxzbyBhIGdyZWF0IHdheSBmb3IgY2xpZW50cyB0byB2aXN1YWxpemUgcHJvcGVydGllcyB1bmRlciBjb25zdHJ1Y3Rpb24uXCIsXG5cdFx0XHRwcmljZTogJ1ByaWNlOiBUbyBCZSBEZXRlcm1pbmVkJyxcblx0XHRcdGxldmVsOiBbJ3Byb2Zlc3Npb25hbCcsICdhbGwnXSxcbiAgICAgIGJ1dHRvbjoge1xuICAgICAgICB0eXBlOiAnbW9kYWwnLFxuICAgICAgICB0ZXh0OiAnVmlldycsXG4gICAgICAgIGxpbms6ICd2aWV3UmVuZGVyaW5nJ1xuICAgICAgfVxuXHRcdH0sXG5cdFx0e1xuICAgICAgbmFtZTogJ0JSQU5ESU5HJyxcbiAgICAgIHNsdWc6ICdicmFuZGluZycsXG4gICAgICBpbWc6ICdpbWcvcHJpY2luZy9icmFuZGluZy5wbmcnLFxuICAgICAgaW1nQWx0OiAnQnJhbmRpbmcgQm9va2xldCcsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvZmxvb3ItcGxhbi5wbmcnLFxuICAgICAgc3ViSGVhZDogJ21ha2luZyB5b3VyIHNwYWNlIGZ1bmN0aW9uYWwnLFxuICAgICAgZGVzYzogXCJJdCBpcyBpbXBvcnRhbnQgZm9yIGJ1c2luZXNzZXMgdG8gc3RhbmQgb3V0LiBCeSBjcmVhdGluZyBicmFuZGluZyB0b29scyB0aGF0IHBvdGVudGlhbCBjbGllbnRzIG9yIGFyY2hpdGVjdHMgY2FuIGdldCB0aGVpciBoYW5kcyBvbiwgSSB3aWxsIGhlbHAgbW92ZSB5b3VyIGJ1c2luZXNzIHRvIHRoZSBmcm9udCBvZiB0aGUgbGluZS4gSSBjYW4gZGV2ZWxvcCBidXNpbmVzcyB0b29scyB0aGF0IHJlZmxlY3QgeW91ciB2aXNpb24gYW5kIHJlYWNoIHlvdXIgc3BlY2lmaWMgYXVkaWVuY2UsIHN1Y2ggYXMgcG9ydGZvbGlvIGJvb2tsZXRzLlwiLFxuXHRcdFx0cHJpY2U6ICdTdGFydGluZyBhdDogJDUwMCcsXG5cdFx0XHRsZXZlbDogWydwcm9mZXNzaW9uYWwnLCAnYWxsJ10sXG4gICAgICBidXR0b246IHtcbiAgICAgICAgdHlwZTogJ21vZGFsJyxcbiAgICAgICAgdGV4dDogJ1ZpZXcnLFxuICAgICAgICBsaW5rOiAndmlld0Jvb2tsZXQnXG4gICAgICB9XG5cdFx0fSxcblx0XHR7XG4gICAgICBuYW1lOiAnQ0xJRU5UXFwnUyBDSE9JQ0UnLFxuICAgICAgc2x1ZzogJ2NsaWVudHMtY2hvaWNlJyxcbiAgICAgIGltZzogJ2ltZy9wcmljaW5nL2NsaWVudHMtY2hvaWNlLnBuZycsXG4gICAgICBpbWdBbHQ6ICdDbGllbnRcXCdzIENob2ljZScsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvZmxvb3ItcGxhbi5wbmcnLFxuICAgICAgc3ViSGVhZDogJ21ha2luZyB5b3VyIHNwYWNlIGZ1bmN0aW9uYWwnLFxuICAgICAgZGVzYzogXCJBIHBlcnNvbmFsbHkgdGFpbG9yZWQgZGVzaWduIHNlcnZpY2UgY2FuIGJlIGNyZWF0ZWQgZm9yIHlvdSBpZiB0aGVzZSBzZXJ2aWNlcyBkbyBub3QgYWxpZ24gd2l0aCB3aGF0IHlvdSBhcmUgbG9va2luZyBmb3IgaW4geW91ciBwcm9qZWN0LiBUaGlzIGNvdWxkIGJlIGEgc2hvcHBpbmcgcGFydG5lciBhdCB5b3VyIGZhdm9yaXRlIGZ1cm5pdHVyZSBzdG9yZSB0byBoZWxwIG1ha2UgZGVjaXNpb25zLCBoZWxwIHNlbGVjdGluZyBwaWxsb3dzIG9yIGFjY2Vzc29yaWVzLCBvciBldmVuIGFzc2lzdGFuY2UgZGV0ZXJtaW5pbmcgdGhlIGJlc3QgcGFpbnQgY29sb3IgZm9yIHlvdXIgc3BhY2UuXCIsXG5cdFx0XHRwcmljZTogJ1ByaWNlOiBUbyBCZSBEZXRlcm1pbmVkLicsXG5cdFx0XHRsZXZlbDogWydwZXJzb25hbCcsICdhbGwnXSxcbiAgICAgIGJ1dHRvbjoge1xuICAgICAgICB0eXBlOiAnY29udGFjdCcsXG4gICAgICAgIHRleHQ6ICdjb250YWN0IHRvIGdldCBzdGFydGVkJyxcbiAgICAgICAgbGluazogJ2NvbnRhY3QnXG4gICAgICB9XG4gICAgfVxuICBdO1xuXG5cbiAgcmV0dXJuIHtcbiAgICBsaXN0OiBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuIHNlcnZpY2VzO1xuICAgIH0sXG4gICAgZmluZDogZnVuY3Rpb24oc2x1Zyl7XG4gICAgICAgIHJldHVybiBzZXJ2aWNlcy5maW5kKGZ1bmN0aW9uKHNlcnZpY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBzZXJ2aWNlLnNsdWcgPT09IHNsdWc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdwcmljaW5nJywgWydwcmljaW5nLmNvbnRyb2xsZXInLCAncHJpY2luZy1kZXRhaWwuY29udHJvbGxlcicsICdwcmljaW5nLmZhY3RvcnknXSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgncG9zdC1jYXRlZ29yeS5jb250cm9sbGVyJywgW10pLmNvbnRyb2xsZXIoJ1Bvc3RDYXRlZ29yeUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGVQYXJhbXMnLCAnTWV0YScsICdQb3N0U2VydmljZScsIGZ1bmN0aW9uKCRzY29wZSwgJHN0YXRlUGFyYW1zLCBNZXRhLCBQb3N0U2VydmljZSl7XG5cblx0JHNjb3BlLnBvc3RzO1xuXHQkc2NvcGUuY3VycmVudENhdGVnb3J5O1xuXHQkc2NvcGUuY2F0ZWdvcnlQYWdlID0gdHJ1ZTtcblxuXHRQb3N0U2VydmljZS5nZXRDYXRlZ29yaWVzKClcblx0XHQudGhlbihyZXMgPT4ge1xuXHRcdFx0JHNjb3BlLmN1cnJlbnRDYXRlZ29yeSA9IHJlcy5maW5kKGNhdCA9PiBjYXQuX2lkID09PSAkc3RhdGVQYXJhbXMuaWQpO1xuXHRcdFx0JHNjb3BlLmNhdGVnb3JpZXMgPSByZXM7XG5cdFx0fSk7XG5cdFxuXHRQb3N0U2VydmljZS5nZXRDYXRlZ29yeVBvc3RzKCRzdGF0ZVBhcmFtcy5pZClcblx0XHQudGhlbihyZXMgPT4ge1xuXHRcdFx0JHNjb3BlLnBvc3RzID0gcmVzO1xuXHRcdFx0TWV0YS5zZXRUaXRsZSgkc2NvcGUuY3VycmVudENhdGVnb3J5Lm5hbWUpO1xuXHRcdH0pO1xuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgncG9zdC1kZXRhaWwuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdQb3N0RGV0YWlsQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZVBhcmFtcycsICdNZXRhJywgJ1Bvc3RTZXJ2aWNlJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGVQYXJhbXMsIE1ldGEsIFBvc3RTZXJ2aWNlKXtcblxuICAgICRzY29wZS5wb3N0O1x0XG5cdFBvc3RTZXJ2aWNlLmdldFBvc3QoJHN0YXRlUGFyYW1zLnNsdWcpXG5cdFx0LnRoZW4ocmVzID0+IHtcblx0XHRcdCRzY29wZS5wb3N0ID0gcmVzO1xuXHRcdFx0TWV0YS5zZXRUaXRsZSgkc2NvcGUucG9zdC50aXRsZSk7XG5cdFx0XHRNZXRhLnNldFNvY2lhbEltYWdlKCRzY29wZS5wb3N0LmltYWdlLnVybCk7XG5cdFx0XHRNZXRhLnNldFNlY3VyZVNvY2lhbEltYWdlKCRzY29wZS5wb3N0LmltYWdlLnNlY3VyZV91cmwpO1xuXHRcdH0pO1xufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3Bvc3QnLCBbJ3Bvc3RzLmNvbnRyb2xsZXInLCAncG9zdC1kZXRhaWwuY29udHJvbGxlcicsICdwb3N0LWNhdGVnb3J5LmNvbnRyb2xsZXInLCAncG9zdC5zZXJ2aWNlJ10pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3Bvc3RzLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignUG9zdHNDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGxvY2F0aW9uJywgJ01ldGEnLCAnUG9zdFNlcnZpY2UnLCBmdW5jdGlvbigkc2NvcGUsICRsb2NhdGlvbiwgTWV0YSwgUG9zdFNlcnZpY2Upe1xuXG4gICAgTWV0YS5zZXRUaXRsZSgnIEludGVyaW9yIERlc2lnbiBJbnNwaXJhdGlvbiBhbmQgQWR2aWNlIEJsb2cgfCBDZWRhciArIFNhZ2UgRGVzaWduIHwgT25saW5lIEludGVyaW9yIERlc2lnbiBTdHVkaW8nKTtcbiAgICBNZXRhLnNldERlc2MoJ0dldCBzb21lIGludGVyaW9yIGRlc2lnbiBpbnNwaXJhdGlvbiBhbmQgZGVzaWduIGFkdmljZSBhbmQgdGlwcyBvbiBvdXIgTW9uZGF5IG1vb2QgYm9hcmQgcG9zdHMuJyk7XG5cdFx0TWV0YS5zZXRLZXl3b3JkcygnU2NhbmRpbmF2aWFuIGluc3BpcmF0aW9uLCBQaXR0c2J1cmdoIGluc3BpcmF0aW9uLCBsaXZpbmcgcm9vbSBpbnNwaXJhdGlvbiwga2l0Y2hlbiBpbnNwaXJhdGlvbiwgcGF0aW8gaW5zcGlyYXRpb24sIGJlZHJvb20gaW5zcGlyYXRpb24sIGNvYXN0YWwgaW5zcGlyYXRpb24sIG51cnNlcnkgaW5zcGlyYXRpb24sIHdvb2QgaW5zcGlyYXRpb24sIHdhbGxwYXBlciBpbnNwaXJhdGlvbicpO1xuXG5cdCRzY29wZS5wb3N0cztcblx0JHNjb3BlLmNhdGVnb3JpZXM7XG5cdCRzY29wZS5jYXRlZ29yeVBhZ2UgPSBmYWxzZTtcblx0JHNjb3BlLnBhZ2VRdWVyeSA9ICRsb2NhdGlvbi5zZWFyY2goKS5wYWdlO1xuXG5cdGxldCB1cmwgPSAkc2NvcGUucGFnZVF1ZXJ5XG5cdFx0PyBgL2FwaS9wb3N0cy9saXN0P3BhZ2U9JHskc2NvcGUucGFnZVF1ZXJ5fWBcblx0XHQ6IGAvYXBpL3Bvc3RzL2xpc3RgO1xuXHRcdFxuXHRQb3N0U2VydmljZS5nZXRQb3N0cyh1cmwpXG5cdFx0LnRoZW4ocmVzID0+IHtcblx0XHRcdCRzY29wZS5wb3N0cyA9IHJlcztcblx0XHR9KTtcblxuXHRQb3N0U2VydmljZS5nZXRDYXRlZ29yaWVzKClcblx0XHQudGhlbihyZXMgPT4ge1xuXHRcdFx0JHNjb3BlLmNhdGVnb3JpZXMgPSByZXM7XG5cdFx0fSk7XG5cblx0XHRcblxuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgncG9zdC5zZXJ2aWNlJywgW10pLmZhY3RvcnkoJ1Bvc3RTZXJ2aWNlJywgWyckaHR0cCcsICgkaHR0cCkgPT4ge1xuXG4gIHJldHVybiB7XG4gICAgZ2V0UG9zdHM6IGZ1bmN0aW9uKHVybCl7XG4gICAgICByZXR1cm4gJGh0dHAuZ2V0KHVybCkudGhlbigocmVzKT0+IHtcblx0XHRcdFx0cmV0dXJuIHJlcy5kYXRhO1xuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRnZXRQb3N0OiBmdW5jdGlvbihzbHVnKXtcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoYC9hcGkvcG9zdC8ke3NsdWd9YCkudGhlbigocmVzKT0+IHtcblx0XHRcdFx0cmV0dXJuIHJlcy5kYXRhO1xuXHRcdFx0fSk7XG5cdFx0fSxcblx0XHRnZXRDYXRlZ29yaWVzOiBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuICRodHRwLmdldCgnL2FwaS9jYXRlZ29yaWVzL2xpc3QnKS50aGVuKChyZXMpPT4ge1xuXHRcdFx0XHRyZXR1cm4gcmVzLmRhdGE7XG5cdFx0XHR9KTtcbiAgICB9LFxuICAgIGdldENhdGVnb3J5UG9zdHM6IGZ1bmN0aW9uKGlkKXtcbiAgICAgIHJldHVybiAkaHR0cC5nZXQoYC9hcGkvY2F0ZWdvcmllcy8ke2lkfWApLnRoZW4oKHJlcyk9PiB7XG5cdFx0XHRcdHJldHVybiByZXMuZGF0YTtcblx0XHRcdH0pO1xuICAgIH0sXG4gIH1cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignU2VydmljZUNvbnRyb2xsZXInLCBbJyRzY29wZScsICckc3RhdGVQYXJhbXMnLCAnU2VydmljZUZhY3RvcnknLCAnTWV0YScsICgkc2NvcGUsICRzdGF0ZVBhcmFtcywgU2VydmljZUZhY3RvcnksIE1ldGEpID0+IHtcblxuICAgICRzY29wZS5zZXJ2aWNlcyA9IFNlcnZpY2VGYWN0b3J5Lmxpc3QoKTtcblxufV0pO1xuXG5hbmd1bGFyLm1vZHVsZSgnc2VydmljZS5kZXRhaWwuY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdTZWxlY3RlZFNlcnZpY2VDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJHN0YXRlUGFyYW1zJywgJ1NlcnZpY2VGYWN0b3J5JywgJ01ldGEnLCAoJHNjb3BlLCAkc3RhdGVQYXJhbXMsIFNlcnZpY2VGYWN0b3J5LCBNZXRhKSA9PiB7XG5cbiAgICAkc2NvcGUuc2VsZWN0ZWRTZXJ2aWNlID0gU2VydmljZUZhY3RvcnkuZmluZCgkc3RhdGVQYXJhbXMuc2x1Zyk7XG4gICAgJHNjb3BlLmJyYW5kaW5nID0gZmFsc2U7XG4gICAgJHNjb3BlLmJyYW5kaW5nID0gKCRzY29wZS5zZWxlY3RlZFNlcnZpY2UubmFtZSA9PT0gJ0JyYW5kaW5nJykgPyB0cnVlIDogZmFsc2U7XG5cbiAgICBNZXRhLnNldFRpdGxlKCRzY29wZS5zZWxlY3RlZFNlcnZpY2UubmFtZSk7XG5cbiAgICBpZiAoIUVsZW1lbnQucHJvdG90eXBlLm1hdGNoZXMpIHtcbiAgICAgICAgRWxlbWVudC5wcm90b3R5cGUubWF0Y2hlcyA9XG4gICAgICAgICAgICBFbGVtZW50LnByb3RvdHlwZS5tYXRjaGVzU2VsZWN0b3IgfHxcbiAgICAgICAgICAgIEVsZW1lbnQucHJvdG90eXBlLm1vek1hdGNoZXNTZWxlY3RvciB8fFxuICAgICAgICAgICAgRWxlbWVudC5wcm90b3R5cGUubXNNYXRjaGVzU2VsZWN0b3IgfHxcbiAgICAgICAgICAgIEVsZW1lbnQucHJvdG90eXBlLm9NYXRjaGVzU2VsZWN0b3IgfHxcbiAgICAgICAgICAgIEVsZW1lbnQucHJvdG90eXBlLndlYmtpdE1hdGNoZXNTZWxlY3RvciB8fFxuICAgICAgICAgICAgZnVuY3Rpb24ocykge1xuICAgICAgICAgICAgICAgIHZhciBtYXRjaGVzID0gKHRoaXMuZG9jdW1lbnQgfHwgdGhpcy5vd25lckRvY3VtZW50KS5xdWVyeVNlbGVjdG9yQWxsKHMpLFxuICAgICAgICAgICAgICAgICAgICBpID0gbWF0Y2hlcy5sZW5ndGg7XG4gICAgICAgICAgICAgICAgd2hpbGUgKC0taSA+PSAwICYmIG1hdGNoZXMuaXRlbShpKSAhPT0gdGhpcykge31cbiAgICAgICAgICAgICAgICByZXR1cm4gaSA+IC0xO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuXG4gICAgJHNjb3BlLmJvb2tTaG93MSA9IGZhbHNlO1xuICAgICRzY29wZS5ib29rU2hvdzIgPSBmYWxzZTtcbiAgICAkc2NvcGUudG9nZ2xlQm9vazEgPSBmdW5jdGlvbigpe1xuICAgICAgJHNjb3BlLmJvb2tTaG93MSA9IHRydWU7XG4gICAgfVxuICAgICRzY29wZS50b2dnbGVCb29rMiA9IGZ1bmN0aW9uKCl7XG4gICAgICAkc2NvcGUuYm9va1Nob3cyID0gdHJ1ZTtcbiAgICB9XG5cbiAgICB2YXIgZ2V0Q2xvc2VzdCA9IGZ1bmN0aW9uICggZWxlbSwgc2VsZWN0b3IgKSB7XG4gICAgICAgIC8vIEdldCBjbG9zZXN0IG1hdGNoXG4gICAgICAgIGZvciAoIDsgZWxlbSAmJiBlbGVtICE9PSBkb2N1bWVudDsgZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSApIHtcbiAgICAgICAgICAgIGlmICggZWxlbS5tYXRjaGVzKCBzZWxlY3RvciApICkgcmV0dXJuIGVsZW07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfTtcblxuICAgICRzY29wZS5uZXh0UGFnZSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgIGFuZ3VsYXIuZWxlbWVudChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcuYWN0aXZlJykpXG4gICAgICAgICAgICAucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgICAuYWRkQ2xhc3MoJ2ZsaXBwZWQnKVxuICAgICAgICAgICAgLm5leHQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBhZ2UnKSlcbiAgICAgICAgICAgIC5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgICAvLyAkKCcuYWN0aXZlJylcbiAgICAgIC8vICAgLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuICAgICAgLy8gICAuYWRkQ2xhc3MoJ2ZsaXBwZWQnKVxuICAgICAgLy8gICAubmV4dCgnLnBhZ2UnKVxuICAgICAgLy8gICAuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAvLyAgIC5zaWJsaW5ncygpO1xuICAgIH1cblxuICAgICRzY29wZS5wcmV2UGFnZSA9IGZ1bmN0aW9uKCl7XG4gICAgICAgICQoJy5mbGlwcGVkJylcbiAgICAgICAgICAubGFzdCgpXG4gICAgICAgICAgLnJlbW92ZUNsYXNzKCdmbGlwcGVkJylcbiAgICAgICAgICAuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgLnNpYmxpbmdzKCcucGFnZScpXG4gICAgICAgICAgLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgICAgIC8vIHZhciBlbGVtID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLmZsaXBwZWQnKTtcbiAgICAgICAgICAgIC8vLmxhc3QoKVxuICAgICAgICAgICAgLy8gZWxlbS5yZW1vdmVDbGFzcygnZmxpcHBlZCcpXG4gICAgICAgICAgICAvLyAuYWRkQ2xhc3MoJ2FjdGl2ZScpXG4gICAgICAgICAgICAvLyAubmV4dChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGFnZScpKVxuICAgICAgICAgICAgLy8gLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICB9XG5cbiAgICAkc2NvcGUuY3VycmVudFBhZ2UgPSAwO1xuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnc2VydmljZS5mYWN0b3J5JywgW10pLmZhY3RvcnkoJ1NlcnZpY2VGYWN0b3J5JywgKCkgPT4ge1xuICB2YXIgc2VydmljZXMgPSBbXG4gICAge1xuICAgICAgbmFtZTogJ0ludGVyaW9yIERlc2lnbiBGb3IgQWxsJyxcbiAgICAgIHNsdWc6ICdpbnRlcmlvci1kZXNpZ24nLFxuICAgICAgbG9nbzogJ2ltZy9pY29ucy9ob21lLnN2ZycsXG4gICAgICBiYW5uZXI6ICdpbWcvc2VydmljZXMvbWFzdGVyLWJyLnBuZycsXG5cdFx0XHRzdWJIZWFkOiAnYW1wbGlmeWluZyBjbGllbnQgc3BhY2VzJyxcblx0XHRcdGxpbms6ICdwZXJzb25hbCcsXG4gICAgICBpbmNsdWRlZDogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogJ0N1cmF0b3InLFxuICAgICAgICAgIGxpbms6ICdjdXJhdG9yJ1xuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogJ0lOLUhPTUUgREVTSUdOJyxcbiAgICAgICAgICBsaW5rOiAncHJpY2luZy9wZXJzb25hbCdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6ICdQcm9mZXNzaW9uYWwgT3BpbmlvbicsXG4gICAgICAgICAgbGluazogJ3ByaWNpbmcvcGVyc29uYWwnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiAnQ2xpZW50XFwncyBDaG9pY2UnLFxuICAgICAgICAgIGxpbms6ICdwcmljaW5nL3BlcnNvbmFsJ1xuICAgICAgICB9XG4gICAgICBdLFxuICAgICAgZGVzYzogXCJMb2NhbCB0byB0aGUgQmVuZCwgT3JlZ29uIGFyZWE/IFdlIGFyZSBoZXJlIHRvIGFzc2lzdCB5b3UgaW4geW91ciBkZXNpZ24gbmVlZHMuIFdlIHdhbnQgeW91IHRvIGZlZWwgYXQgaG9tZSBpbiB5b3VyIGhvbWUuIFdl4oCZZCBsb3ZlIHRvIGdldCB0byBrbm93IHlvdSB0byBkZXZlbG9wIGEgc3R5bGUgdGhhdCBpcyBhbGwgeW91ciBvd24uIEEgZGVzaWduIHBhY2thZ2Ugd2l0aCBjb25jZXB0cyBhbmQgYSBmbG9vciBwbGFuIHdpbGwgYmUgY3JlYXRlZCBhbGwgdGhlIHdheSB0aHJvdWdoIGluc3RhbGxhdGlvbi4gQ29udGFjdCB1cyBmb3IgYSBmcmVlIGNvbnN1bHRhdGlvbiFcIixcbiAgICAgIGltZzE6ICdpbWcvc2VydmljZXMva2l0Y2hlbi5wbmcnLFxuICAgICAgaW1nMUFsdDogJ0tpdGNoZW4gZGVzaWduZWQgd2l0aCBsb2NhbGx5IHNvdXJjZWQgd29vZCcsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2ludGVyaW9yLWRlc2lnbi5wbmcnLFxuICAgICAgaW1nMkFsdDogJ0ludGVyaW9yIGRlc2lnbiBmaW5pc2hlcyBhbmQgZmFicmljcydcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6ICdJbnRlcmlvciBEZXNpZ24gZm9yIHRoZSBQcm8nLFxuICAgICAgc2x1ZzogJ3NwYWNlLXBsYW5uaW5nJyxcbiAgICAgIGxvZ286ICdpbWcvaWNvbnMvbWVhc3VyZW1lbnQuc3ZnJyxcbiAgICAgIGJhbm5lcjogJ2ltZy9zZXJ2aWNlcy9mbG9vci1wbGFuLnBuZycsXG5cdFx0XHRzdWJIZWFkOiAnbWFraW5nIHlvdXIgc3BhY2UgZnVuY3Rpb25hbCcsXG5cdFx0XHRsaW5rOiAncHJvZmVzc2lvbmFsJyxcbiAgICAgIGluY2x1ZGVkOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiAnU3RhZ2luZyBDb25zdWx0YXRpb24nLFxuICAgICAgICAgIGxpbms6ICdwcmljaW5nL3Byb2Zlc3Npb25hbCdcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6ICczRCBSZW5kZXJpbmdzJyxcbiAgICAgICAgICBsaW5rOiAncHJpY2luZy9wcm9mZXNzaW9uYWwnXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiAnQnJhbmRpbmcnLFxuICAgICAgICAgIGxpbms6ICdwcmljaW5nL3Byb2Zlc3Npb25hbCdcbiAgICAgICAgfVxuICAgICAgXSxcbiAgICAgIGRlc2M6IFwiV2hhdCBpcyBzcGFjZSBwbGFubmluZz8gSXQgaXMgY3JlYXRpbmcgYSBoaWdobHkgZnVuY3Rpb25hbCBmdXJuaXR1cmUgYXJyYW5nZW1lbnQuIFdvdWxkIHlvdSBsaWtlIGFzc2lzdGFuY2UgYXJyYW5naW5nIHRoZSBsYXlvdXQgb2YgeW91ciBzcGFjZT8gV2UgYXJlIGhlcmUgdG8gaGVscCEgV2Ugd2lsbCBvcmdhbml6ZSB5b3VyIGV4aXN0aW5nIG9yIG5ldyBmdXJuaXR1cmUgaW4gYSB3YXkgdGhhdCBjcmVhdGVzIGEgbW9yZSBuYXR1cmFsIGFuZCBmdW5jdGlvbmFsIGZsb3cgd2l0aCBhIGN1c3RvbWl6ZWQgZmxvb3IgcGxhbiB0aGF0IHlvdSB3aWxsIGxvdmUuXCIsXG4gICAgICBpbWcxOiAnaW1nL3NlcnZpY2VzL2Zsb29ycGxhbi1zcGFjZXBsYW5uaW5nLmpwZycsXG4gICAgICBpbWcxQWx0OiAnRmxvb3IgcGxhbiBjcmVhdGVkIGluIHBob3Rvc2hvcCcsXG4gICAgICBpbWcyOiAnaW1nL3NlcnZpY2VzL2Zsb29ycGxhbi5wbmcnLFxuICAgICAgaW1nMkFsdDogJ09wZW4gZmxvb3IgcGxhbidcbiAgICB9XG5cdF07XG5cdFxuXHRjb25zdCBob21lU2VydmljZXMgPSBbJ1NwYWNlIFBsYW5uaW5nJywgJzNEIFJlbmRlcmluZ3MnLCAnRnVybml0dXJlIFNlbGVjdGlvbicsICdQYWludCBTZWxlY3Rpb24nLCAnUmVtb2RlbHMnLCAnS2l0Y2hlbiBhbmQgQmF0aCcsICdDb25jaWVyZ2UgRGVzaWduJywgJ0FuZCBNb3JlJ11cblxuXG4gIHJldHVybiB7XG4gICAgbGlzdDogZnVuY3Rpb24oKXtcbiAgICAgIHJldHVybiBzZXJ2aWNlcztcblx0XHR9LFxuXHRcdGhvbWVMaXN0OiBmdW5jdGlvbigpe1xuICAgICAgcmV0dXJuIGhvbWVTZXJ2aWNlcztcbiAgICB9LFxuICAgIGZpbmQ6IGZ1bmN0aW9uKHNsdWcpe1xuICAgICAgICByZXR1cm4gc2VydmljZXMuZmluZChmdW5jdGlvbihzZXJ2aWNlKSB7XG4gICAgICAgICAgICByZXR1cm4gc2VydmljZS5zbHVnID09IHNsdWc7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdzZXJ2aWNlcycsIFsnc2VydmljZS5jb250cm9sbGVyJywgJ3NlcnZpY2UuZGV0YWlsLmNvbnRyb2xsZXInLCAnc2VydmljZS5mYWN0b3J5JywgJ3ByaWNpbmcuZmFjdG9yeSddKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdwb3J0Zm9saW8tZGV0YWlsLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignUG9ydGZvbGlvRGV0YWlsQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRzdGF0ZVBhcmFtcycsICckaHR0cCcsICdNZXRhJywgZnVuY3Rpb24oJHNjb3BlLCAkc3RhdGVQYXJhbXMsICRodHRwLCBNZXRhKXtcblxuICAgICRzY29wZS5wb3N0O1xuICAgIGNvbnN0IHNsdWcgPSAkc3RhdGVQYXJhbXMuc2x1ZztcblxuICAgIC8vICRodHRwLmdldChgL2FwaS9wb3N0LyR7c2x1Z31gKS50aGVuKChyZXMpPT4ge1xuICAgIC8vICAgICAkc2NvcGUucG9zdCA9IHJlcy5kYXRhO1xuXHQvLyBcdE1ldGEuc2V0VGl0bGUoJHNjb3BlLnBvc3QudGl0bGUpO1xuXHQvLyBcdE1ldGEuc2V0U29jaWFsSW1hZ2UoJHNjb3BlLnBvc3QuaW1hZ2UudXJsKTtcblx0Ly8gXHRNZXRhLnNldFNlY3VyZVNvY2lhbEltYWdlKCRzY29wZS5wb3N0LmltYWdlLnNlY3VyZV91cmwpO1xuICAgIC8vIH0pO1xuXG59XSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgncG9ydGZvbGlvLmNvbnRyb2xsZXInLCBbXSkuY29udHJvbGxlcignUG9ydGZvbGlvQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJyRodHRwJywgJ01ldGEnLCBmdW5jdGlvbigkc2NvcGUsICRodHRwLCBNZXRhKXtcblxuXHRNZXRhLnNldFRpdGxlKCcgSW50ZXJpb3IgRGVzaWduIFBvcnRmb2xpbyB8IENlZGFyICsgU2FnZSBEZXNpZ24gfCBPbmxpbmUgSW50ZXJpb3IgRGVzaWduIFN0dWRpbycpO1xuXHRNZXRhLnNldERlc2MoJ0dldCBzb21lIGludGVyaW9yIGRlc2lnbiBpbnNwaXJhdGlvbiBhbmQgZGVzaWduIGFkdmljZSBhbmQgdGlwcyBvbiBvdXIgTW9uZGF5IG1vb2QgYm9hcmQgcG9zdHMuJyk7XG5cdE1ldGEuc2V0S2V5d29yZHMoJ2ludGVyaW9yIGRlc2lnbiBwb3J0Zm9saW8sIGludGVyaW9yIGRlc2lnbiBwcm9qZWN0LCByZXNpZGVudGlhbCBkZXNpZ24sIGNvbW1lcmNpYWwgZGVzaWduLCBpbnRlcmlvciBkZXNpZ24gcGhvdG9zJyk7XG5cdCRzY29wZS5wb3N0cztcblx0JHNjb3BlLnNob3dDYXJvdXNlbCA9IGZhbHNlO1xuXHQkc2NvcGUuc2VsZWN0ZWRQb3J0Zm9saW8gPSB1bmRlZmluZWQ7XG5cdCRzY29wZS5zZWxlY3RlZFNsaWRlID0gdW5kZWZpbmVkO1xuXG5cdCRzY29wZS4kb24oJ2Nsb3NlJywgZnVuY3Rpb24gKCkgeyBcblx0XHQkc2NvcGUuY2xvc2VNb2RhbCgpO1xuXHR9KTtcblxuICAkaHR0cC5nZXQoJy9hcGkvcG9ydGZvbGlvJykudGhlbigocmVzKT0+IHtcblx0XHQkc2NvcGUucG9ydGZvbGlvcyA9IHJlcy5kYXRhO1xuXHR9KTtcblxuXHQkc2NvcGUuc2hvd1NsaWRlID0gZnVuY3Rpb24oc2x1Zykge1xuICAgICRzY29wZS5zZWxlY3RlZFNsaWRlID0gc2x1ZztcbiAgfVxuXG5cdCRzY29wZS5zaG93Q2Fyb3VzZWxNb2RhbCA9IGZ1bmN0aW9uKHBvcnRmb2xpbykge1xuXHRcdCRzY29wZS5zZWxlY3RlZFBvcnRmb2xpbyA9IHBvcnRmb2xpbztcblx0XHQkc2NvcGUuc2hvd0Nhcm91c2VsID0gdHJ1ZTtcblx0fVxuXG5cdCRzY29wZS5jbG9zZU1vZGFsID0gZnVuY3Rpb24oKSB7XG5cdFx0JHNjb3BlLnNob3dDYXJvdXNlbCA9IGZhbHNlO1xuXHRcdCRzY29wZS5zZWxlY3RlZFBvcnRmb2xpbyA9IHVuZGVmaW5lZDtcblx0fVxuXG5cdCRzY29wZS5jbG9zZVNsaWRlID0gZnVuY3Rpb24oKSB7XG5cdFx0JHNjb3BlLnNlbGVjdGVkU2xpZGUgPSB1bmRlZmluZWQ7XG5cdH1cblxufV0pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3BvcnRmb2xpbycsIFsncG9ydGZvbGlvLmNvbnRyb2xsZXInLCAncG9ydGZvbGlvLWRldGFpbC5jb250cm9sbGVyJywgJ3VpLmNhcm91c2VsJ10pO1xuIiwiYW5ndWxhci5tb2R1bGUoJ3N0eWxlLXF1aXouY29udHJvbGxlcicsIFtdKS5jb250cm9sbGVyKCdTdHlsZVF1aXpDb250cm9sbGVyJywgWyckc2NvcGUnLCAnJGh0dHAnLCAnU3R5bGVRdWl6RmFjdG9yeScsICdOb3RpZmllclNlcnZpY2UnLCAnTWV0YScsICgkc2NvcGUsICRodHRwLCBTdHlsZVF1aXpGYWN0b3J5LCBub3RpZmllciwgTWV0YSkgPT4ge1xuXG5cdE1ldGEuc2V0VGl0bGUoJ1N0eWxlIFF1aXogfCBDZWRhciArIFNhZ2UgRGVzaWduIHwgT25saW5lIEludGVyaW9yIERlc2lnbiBTdHVkaW8nKTtcblx0TWV0YS5zZXRTb2NpYWxJbWFnZSgnaHR0cDovL3Jlcy5jbG91ZGluYXJ5LmNvbS93d3ctY2VkYXJhbmRzYWdlLWNvbS9pbWFnZS91cGxvYWQvdjE1NDUzNTE4MjEvc3R5bGUtcXVpei1zZW8uanBnJyk7XG5cdE1ldGEuc2V0U2VjdXJlU29jaWFsSW1hZ2UoJ2h0dHBzOi8vcmVzLmNsb3VkaW5hcnkuY29tL3d3dy1jZWRhcmFuZHNhZ2UtY29tL2ltYWdlL3VwbG9hZC92MTU0NTM1MTgyMS9zdHlsZS1xdWl6LXNlby5qcGcnKTtcblxuXHR3aW5kb3cuc2Nyb2xsVG8oMCwgMCk7XG5cblx0JHNjb3BlLnF1ZXN0aW9ucyA9IFN0eWxlUXVpekZhY3RvcnkubGlzdCgpO1xuICAgICRzY29wZS5hbnN3ZXJMaXN0ID0gU3R5bGVRdWl6RmFjdG9yeS5hbnN3ZXJzKCk7XG4gICAgJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA9IDA7XG5cdCRzY29wZS5oYXNGaW5pc2hlZCA9IGZhbHNlO1xuXHQkc2NvcGUuYW5zd2VycyA9IFtdO1xuXHQkc2NvcGUuZm9ybWF0dGVkQW5zd2VycyA9ICcnO1xuXHQkc2NvcGUucmVzcG9uc2VzID0ge1xuXHRcdGJvaGVtaWFuOiAwLFxuXHRcdGNvbnRlbXBvcmFyeTogMCxcblx0XHRlY2xlY3RpYzogMCxcblx0XHRpbmR1c3RyaWFsOiAwLFxuXHRcdG1vZGVybjogMCxcblx0XHRzY2FuZGFuYXZpYW46IDAsXG5cdFx0dHJhZGl0aW9uYWw6IDAsXG5cdFx0d29ybGRseTogMFxuXHR9XG5cdCRzY29wZS5mb3JtRGF0YSA9IHt9O1xuXHQkc2NvcGUuY2xpZW50ID0gJyc7XG5cbiAgICAkc2NvcGUuc2VsZWN0ID0gZnVuY3Rpb24oZSl7XG4gICAgICAgIHZhciBib3ggPSBhbmd1bGFyLmVsZW1lbnQoZS50YXJnZXQpO1xuICAgIH1cblxuICAgICRzY29wZS5pc0N1cnJlbnRRSW5kZXggPSAoaW5kZXgpID0+IHtcbiAgICAgICAgcmV0dXJuICRzY29wZS5jdXJyZW50UXVlc3Rpb24gPT09IGluZGV4O1xuICAgIH1cblxuICAgICRzY29wZS5uZXh0USA9ICgpID0+IHtcblx0XHRjb25zdCBhbnN3ZXIgPSAkc2NvcGUucXVlc3Rpb25zWyRzY29wZS5jdXJyZW50UXVlc3Rpb25dLnJlc3BvbnNlO1xuXHRcdCRzY29wZS5yZXNwb25zZXNbYW5zd2VyXSsrO1xuICAgICAgICAkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gKCRzY29wZS5jdXJyZW50UXVlc3Rpb24gPCAkc2NvcGUucXVlc3Rpb25zLmxlbmd0aCAtMSkgPyArKyRzY29wZS5jdXJyZW50UXVlc3Rpb24gOiAwO1xuICAgIH1cblxuICAgICRzY29wZS5wcmV2USA9ICgpID0+IHtcblx0XHQkc2NvcGUuY3VycmVudFF1ZXN0aW9uID0gKCRzY29wZS5jdXJyZW50UXVlc3Rpb24gPiAwKSA/IC0tJHNjb3BlLmN1cnJlbnRRdWVzdGlvbiA6ICRzY29wZS5xdWVzdGlvbnMubGVuZ3RoIC0xO1xuXHRcdGNvbnN0IGFuc3dlciA9ICRzY29wZS5xdWVzdGlvbnNbJHNjb3BlLmN1cnJlbnRRdWVzdGlvbl0ucmVzcG9uc2U7XG5cdFx0JHNjb3BlLnJlc3BvbnNlc1thbnN3ZXJdLS07XG4gICAgfVxuXG4gICAgJHNjb3BlLnN1Ym1pdFF1aXogPSAoKSA9PiB7XG5cdFx0Y29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKCRzY29wZS5yZXNwb25zZXMpO1xuXHRcdGNvbnN0IGxhcmdlc3QgPSBNYXRoLm1heC5hcHBseShudWxsLCBPYmplY3Qua2V5cygkc2NvcGUucmVzcG9uc2VzKS5tYXAoeCA9PiAkc2NvcGUucmVzcG9uc2VzW3hdKSk7XG5cdFx0JHNjb3BlLmFuc3dlcnMgPSBrZXlzLnJlZHVjZSgocmVzdWx0LCBrZXkpID0+IHsgXG5cdFx0XHRcdGlmICgkc2NvcGUucmVzcG9uc2VzW2tleV0gPT09IGxhcmdlc3QpeyBcblx0XHRcdFx0XHRyZXN1bHQucHVzaChrZXkpOyBcblx0XHRcdFx0fSBcblx0XHRcdFx0cmV0dXJuIHJlc3VsdDtcblx0XHRcdH0sIFtdKTtcblx0XHRpZigkc2NvcGUuYW5zd2Vycy5sZW5ndGggPiAyKSB7XG5cdFx0XHQkc2NvcGUuYW5zd2Vycy5sZW5ndGggPSAyO1xuXHRcdH1cblx0XHQkc2NvcGUuZm9ybWF0dGVkQW5zd2VycyA9ICRzY29wZS5hbnN3ZXJzLmpvaW4oJywnKS5yZXBsYWNlKC8sL2csICcgJiAnKTtcblx0XHQkc2NvcGUuYW5zd2VyTGlzdCA9ICRzY29wZS5hbnN3ZXJMaXN0LmZpbHRlcihhbnN3ZXIgPT4ge1xuXHRcdFx0aWYgKCRzY29wZS5hbnN3ZXJzLmluZGV4T2YoYW5zd2VyLmlkKSAhPT0gLTEpIHtcblx0XHRcdFx0cmV0dXJuIGFuc3dlcjtcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdGNvbnN0IGRhdGEgPSB7XG5cdFx0XHRmaXJzdE5hbWU6ICRzY29wZS5mb3JtRGF0YS5maXJzdE5hbWUsXG5cdFx0XHRsYXN0TmFtZTogJHNjb3BlLmZvcm1EYXRhLmxhc3ROYW1lLFxuICAgICAgICAgICAgZW1haWw6ICRzY29wZS5mb3JtRGF0YS5lbWFpbCxcbiAgICAgICAgICAgIHBob25lOiAkc2NvcGUuZm9ybURhdGEucGhvbmUsXG5cdFx0XHRub3RlOiAkc2NvcGUuZm9ybURhdGEubm90ZSxcblx0XHRcdGFuc3dlcnM6ICRzY29wZS5mb3JtYXR0ZWRBbnN3ZXJzXG5cdFx0fVxuXG4gICAgICAgICRodHRwLnBvc3QoJy9hcGkvc3R5bGUtcXVpeicsIGRhdGEpXG4gICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHtcblx0XHRcdFx0JHNjb3BlLmNsaWVudCA9IHJlc3BvbnNlLmRhdGEuZmlyc3ROYW1lO1xuXHRcdFx0XHQkc2NvcGUuaGFzRmluaXNoZWQgPSB0cnVlO1xuICAgICAgICAgICAgfSwgKGVycikgPT4ge1xuICAgICAgICAgICAgICAgIG5vdGlmaWVyLmVycm9yKCdUaGVyZSB3YXMgYW4gZXJyb3IgcHJvY2Vzc2luZyB5b3VyIHJlcXVlc3QuIFBsZWFzZSB0cnkgYWdhaW4nKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVGhlcmUgd2FzIGEgcHJvYmxlbSBzdWJtaXR0aW5nIHlvdXIgZm9ybSAnICsgZXJyKTtcbiAgICAgICAgICAgIH0pO1xuXHR9XG5cdFxuXHQkc2NvcGUucmVzZXQgPSAoKSA9PiB7XG5cdFx0JHNjb3BlLmZvcm1EYXRhPSB7fTtcblx0XHQkc2NvcGUuaGFzRmluaXNoZWQgPSBmYWxzZTtcblx0XHQkc2NvcGUucXVlc3Rpb25zID0gJHNjb3BlLnF1ZXN0aW9ucy5tYXAocSA9PiB7XG5cdFx0XHRxLnJlc3BvbnNlID0gJyc7XG5cdFx0XHRyZXR1cm4gcTtcblx0XHR9KTtcblx0XHQkc2NvcGUuYW5zd2VyTGlzdCA9IFN0eWxlUXVpekZhY3RvcnkuYW5zd2VycygpO1xuXHRcdCRzY29wZS5jdXJyZW50UXVlc3Rpb24gPSAwO1xuXHRcdCRzY29wZS5hbnN3ZXJzID0gW107XG5cdFx0JHNjb3BlLmZvcm1hdHRlZEFuc3dlcnMgPSAnJztcblx0XHQkc2NvcGUuY2xpZW50ID0gJyc7XG5cdFx0JHNjb3BlLnJlc3BvbnNlcyA9IHtcblx0XHRcdGJvaGVtaWFuOiAwLFxuXHRcdFx0Y29udGVtcG9yYXJ5OiAwLFxuXHRcdFx0ZWNsZWN0aWM6IDAsXG5cdFx0XHRpbmR1c3RyaWFsOiAwLFxuXHRcdFx0bW9kZXJuOiAwLFxuXHRcdFx0c2NhbmRhbmF2aWFuOiAwLFxuXHRcdFx0dHJhZGl0aW9uYWw6IDAsXG5cdFx0XHR3b3JsZGx5OiAwXG5cdFx0fVxuXHR9XG5cbn1dKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdzdHlsZS1xdWl6LmZhY3RvcnknLCBbXSkuZmFjdG9yeSgnU3R5bGVRdWl6RmFjdG9yeScsICgpID0+IHtcblxuXHRjb25zdCBhbnN3ZXJBcnIgPSBbJ2JvaGVtaWFuJywgJ2NvbnRlbXBvcmFyeScsICdlY2xlY3RpYycsICdpbmR1c3RyaWFsJywgJ21vZGVybicsICdzY2FuZGFuYXZpYW4nLCAndHJhZGl0aW9uYWwnLCAnd29ybGRseSddO1xuXG4gICAgY29uc3QgcXVlc3Rpb25zID0gW1xuICAgICAgICB7XG5cdFx0XHRpZDogJ1ExJyxcblx0XHRcdGtleTogJ2JhdGgnLFxuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hlcmUgd291bGQgeW91IHdhbnQgdG8gc3RhcnQgeW91ciBtb3JuaW5ncz8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC02IGNvbC1zbS0zJyxcbiAgICAgICAgICAgIGFuc3dlcnM6IGFuc3dlckFycixcbiAgICAgICAgICAgIHJlc3BvbnNlOiAnJ1xuICAgICAgICB9LFxuICAgICAgICB7XG5cdFx0XHRpZDogJ1EyJyxcblx0XHRcdGtleTogJ2JlZCcsXG4gICAgICAgICAgICB0eXBlOiAncmFkaW8nLFxuICAgICAgICAgICAgcXVlc3Rpb246ICdXaGVyZSB3b3VsZCB5b3Ugd2FudCB0byBsYXkgeW91ciBoZWFkIGF0IG5pZ2h0PycsXG4gICAgICAgICAgICBjb2xzOiAnY29sLTYgY29sLXNtLTMnLFxuICAgICAgICAgICAgYW5zd2VyczogYW5zd2VyQXJyLFxuICAgICAgICAgICAgcmVzcG9uc2U6ICcnXG4gICAgICAgIH0sXG4gICAgICAgIHtcblx0XHRcdGlkOiAnUTMnLFxuXHRcdFx0a2V5OiAnZGluaW5nJyxcdFx0XHRcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doZXJlIHdvdWxkIHlvdSB3YW50IHRvIGRpbmUgd2l0aCB5b3VyIGd1ZXN0cz8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC02IGNvbC1zbS0zJyxcbiAgICAgICAgICAgIGFuc3dlcnM6IGFuc3dlckFycixcbiAgICAgICAgICAgIHJlc3BvbnNlOiAnJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdFx0aWQ6ICdRNCcsXG5cdFx0XHRrZXk6ICdmaXJlJyxcdFx0XHRcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ1doaWNoIGZpcmVwbGFjZSB3b3VsZCB5b3UgbGlrZSB0byBjb3p5IHVwIHRvPycsXG4gICAgICAgICAgICBjb2xzOiAnY29sLTYgY29sLXNtLTMnLFxuICAgICAgICAgICAgYW5zd2VyczogYW5zd2VyQXJyLFxuICAgICAgICAgICAgcmVzcG9uc2U6ICcnXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRpZDogJ1E1Jyxcblx0XHRcdGtleTogJ2hvbWUnLFx0XHRcdFxuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hpY2ggaG9tZSBmZWVscyB0aGUgbW9zdCB3ZWxjb21pbmcgdG8geW91PycsXG4gICAgICAgICAgICBjb2xzOiAnY29sLTYgY29sLXNtLTMnLFxuICAgICAgICAgICAgYW5zd2VyczogYW5zd2VyQXJyLFxuICAgICAgICAgICAgcmVzcG9uc2U6ICcnXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRpZDogJ1E2Jyxcblx0XHRcdGtleTogJ2tpdGNoZW4nLFxuICAgICAgICAgICAgdHlwZTogJ3JhZGlvJyxcbiAgICAgICAgICAgIHF1ZXN0aW9uOiAnV2hlcmUgd291bGQgeW91IGxpa2UgdG8gc3BlbmQgeW91ciB0aW1lIGNvb2tpbmc/JyxcbiAgICAgICAgICAgIGNvbHM6ICdjb2wtNiBjb2wtc20tMycsXG4gICAgICAgICAgICBhbnN3ZXJzOiBhbnN3ZXJBcnIsXG4gICAgICAgICAgICByZXNwb25zZTogJydcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAnUTcnLFxuXHRcdFx0a2V5OiAnbGl2aW5nJyxcbiAgICAgICAgICAgIHR5cGU6ICdyYWRpbycsXG4gICAgICAgICAgICBxdWVzdGlvbjogJ0luIHdoaWNoIHNwYWNlIHdvdWxkIHlvdSBsaWtlIHRvIHNwZW5kIHlvdXIgdGltZSByZWxheGluZz8nLFxuICAgICAgICAgICAgY29sczogJ2NvbC02IGNvbC1zbS0zJyxcbiAgICAgICAgICAgIGFuc3dlcnM6IGFuc3dlckFycixcbiAgICAgICAgICAgIHJlc3BvbnNlOiAnJ1xuXHRcdH0sXG4gICAgICAgIHtcbiAgICAgICAgICAgIGlkOiAnUTgnLFxuICAgICAgICAgICAgdHlwZTogJ3RleHQnXG4gICAgICAgIH1cblx0XTtcblx0XG5cdGNvbnN0IGFuc3dlcnMgPSBbXG5cdFx0e1xuXHRcdFx0aWQ6ICdib2hlbWlhbicsXG5cdFx0XHRkZXNjOiAnWW914oCZcmUgYSB0cnVlIGZyZWUgc3Bpcml0ISAgWW91IGxvdmUgdG8gaW5jb3Jwb3JhdGUgeW91ciBsaWZlIGV4cGVyaWVuY2VzLCBjdWx0dXJlLCBhbmQgd2hpbXN5IGludG8geW91ciBob21lLiAgWW91IGVtYnJhY2UgYSBjYXJlZnJlZSBhcHByb2FjaCB0byB5b3VyIGRlc2lnbi4gIFlvdSBsb3ZlIHRvIHN1cnJvdW5kIHlvdXJzZWxmIGJ5IHRoaW5ncyBzdWNoIGFzIHRhcGVzdHJpZXMsIGdyZWVuZXJ5LCBhbmQgdW51c3VhbCBvYmplY3RzLiAgQW4gZWFydGh5IGNvbG9yIHBhbGV0dGUgZW5oYW5jZWQgYnkgamV3ZWwgdG9uZXMgYWxvbmcgd2l0aCBsYXllcmVkIHRleHR1cmVzIGFuZCBwYXR0ZXJucyBtZWV0cyB5b3VyIHJlbGF4ZWQgdmliZS4gWW91IGNhbiBzaG9wIHRoaXMgc3R5bGUgYmVzdCBhdCBzZWNvbmQtaGFuZCBzdG9yZXMsIGZsZWUgbWFya2V0cyBhbmQgYWx3YXlzIHdoZW4gdHJhdmVsaW5nLidcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAnY29udGVtcG9yYXJ5Jyxcblx0XHRcdGRlc2M6ICdZb3UgbG92ZSBjdXJ2ZWQgYW5kIHNvZnRlbmVkIGxpbmVzIHdpdGggYSBtb3JlIG1pbmltYWxpc3QgZmVlbCwgbWV0YWxzIGFuZCBnbGFzcy4gIFlvdXIgZ28gdG8gY29sb3JzIGFyZSBmb3VuZCB3aXRoaW4gYSBuZXV0cmFsIGNvbG9yIHBhbGV0dGUsIHN1Y2ggYXMgYmxhY2ssIHdoaXRlLCBncmF5IGFuZCBiZWlnZS4gIFRoaXMgYmxlbmRlZCBzdHlsZSB3YXMgZGV2ZWxvcGVkIGluIHRoZSBsYXRlIDIwdGggY2VudHVyeSBhbmQgaXMgY3JlYXRlZCB3aXRoIGEgbWl4IG9mIHRyYWRpdGlvbmFsLCBtb2Rlcm4gYW5kIGFydCBkZWNvIGRlc2lnbi4gIFlvdSBjYW4gc2hvcCB0aGlzIHN0eWxlIGF0IHBsYWNlcyBsaWtlIENyYXRlIGFuZCBCYXJyZWwgYW5kIFogR2FsbGVyaWUuJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdFx0aWQ6ICdlY2xlY3RpYycsXG5cdFx0XHRkZXNjOiAnWW91IHNwYW4gdGhlIG1ham9yaXR5IG9mIGRlc2lnbiBzdHlsZXMgYW5kIGRvbuKAmXQgd2FudCB0byBwdXQgeW91cnNlbGYgaW4ganVzdCBvbmUgc3R5bGUgY2F0ZWdvcnkuICBZb3UgbG92ZSBtaXhpbmcgb2xkIGFuZCBuZXcsIGRpZmZlcmVudCBjb2xvcnMsIGRpZmZlcmVudCB0ZXh0dXJlcywgYW5kIGRpZmZlcmVudCBzdHlsZSB0cmVuZHMuICBUaGlzIHN0eWxlIGlzIGJlc3QgYWNjb21wbGlzaGVkIHdoZW4gaXQgZmxvd3MgdGhyb3VnaG91dCB5b3VyIGVudGlyZSBob21lIHZlcnN1cyBpbiBqdXN0IG9uZSBsb2NhdGlvbi4gIFlvdSBoYXZlIHRoZSBhYmlsaXR5IHRvIHNob3AganVzdCBhYm91dCBhbnl3aGVyZSB0byBhY2hpZXZlIHRoaXMgbG9vay4gWWF5ISdcblx0XHR9LFxuXHRcdHtcblx0XHRcdGlkOiAnaW5kdXN0cmlhbCcsXG5cdFx0XHRkZXNjOiAnWW91IGxvdmUgdGhlIGxvb2sgb2YgYnJpY2ssIGFnZWQgb3JpZ2luYWwgaGFyZHdvb2QgZmxvb3JzIGFuZCBleHBvc2VkIGJlYW1zIGFuZCB1dGlsaXRpZXMuICBZb3VyIGdvIHRv4oCZcyBhcmUgZGFyayBtZXRhbHMsIHN0ZWVsIHBpcGluZywgcmVjbGFpbWVkIHdvb2QgYW5kIG9wZW4gY29uY2VwdCBzcGFjZXMuIFlvdSB0cnVseSBhcHByZWNpYXRlIHNvbWV0aGluZyBvbGQgdGhhdCBjYW4gYmUgcmVwdXJwb3NlZCBpbnRvIHNvbWV0aGluZyBuZXcuICBZb3UgY2FuIHNob3AgdGhpcyBzdHlsZSBhdCBhIGxvY2FsIGZ1cm5pdHVyZSBkZXNpZ25lcnMgc2hvcCwgYW4gYXJjaGl0ZWN0dXJhbCBzYWx2YWdlIHN0b3JlIG9yIGp1c3QgY3JlYXRlIHlvdXIgb3duLicsXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRpZDogJ21vZGVybicsXG5cdFx0XHRkZXNjOiAnWW91IHRydWx5IGFwcHJlY2lhdGUgbWlkLWNlbnR1cnkgbW9kZXJuIGFuZCB0aGUgYXJ0IGRlY28gc3R5bGUuICBZb3UgaGF2ZSBhIGNvbm5lY3Rpb24gd2l0aCBhbiBlYXJ0aHkgZmVlbCwgd2FybSB3b29kIGVsZW1lbnRzLCBtaW5pbWFsaXNtLCBhbmQgY2xlYW4gYXJjaGl0ZWN0dXJhbCBsaW5lcy4gWW91IGFsc28gYmVsaWV2ZSBGcmFuayBMbG95ZCBXcmlnaHQgZGlkIHRoaW5ncyByaWdodCEgIEZ1cm5pdHVyZSB3aXRoIHdvb2RlbiBmcmFtZXMgYW5kIHdvb2x5IGJvbGQgY29sb3JlZCB1cGhvbHN0ZXJ5IGFyZSB5b3VyIGdvIHRvLiAgWW91IGNhbiBzaG9wIHRoaXMgc3R5bGUgYXQgcGxhY2VzIGxpa2UgV2VzdCBFbG0sIEFsbCBNb2Rlcm4gYW5kIENCMi4nXG5cdFx0fSxcblx0XHR7XG5cdFx0XHRpZDogJ3NjYW5kYW5hdmlhbicsXG5cdFx0XHRkZXNjOiAnWW91IGFyZSBkcmF3biB0byBhIGRlc2lnbiB3aXRoIGEgc2ltcGxlIG5ldXRyYWwgY29sb3IgcGFsZXR0ZSB3aXRoIGEgbWluaW1hbGlzdGljIGFuZCBzaW1wbGUgZGVzaWduLiAgVGhpcyBOb3JkaWMgc3R5bGUgaGFzIGNvbWUgdG8gdGhlIGZvcmVmcm9udCBpbiB0aGUgVVMgYnkgdGhlIGludHJvZHVjdGlvbiBvZiBJa2VhIGFuZCB0aGVpciBTd2VkaXNoIG1lYXRiYWxscyEgIFlvdSBncmVhdGx5IGFwcHJlY2lhdGUgdGhlIGZ1bmN0aW9uIG9mIGZ1cm5pdHVyZSBpbiB5b3VyIGhvbWUuICBZb3UgY2FuIHNob3AgdGhpcyBzdHlsZSBhdCBwbGFjZXMgbGlrZSBXZXN0IEVsbSwgUmVzdG9yYXRpb24gSGFyZHdhcmUgYW5kIHRoZSBiZWxvdmVkIG9yIGhhdGVkLCBkZXBlbmRpbmcgb24gd2hvIHlvdSBhcmUsIElrZWEuJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdFx0aWQ6ICd0cmFkaXRpb25hbCcsXG5cdFx0XHRkZXNjOiAnWW91IGxvdmUgcmljaCBjb2xvcnMgdGhhdCB3ZWxjb21lIHlvdSBhbmQgeW91ciBndWVzdHMgbGlrZSBhIHdhcm0gaHVnLiAgVGhpcyBzdHlsZSBjYW4gc3BhbiBmcm9tIDE4dGggQ2VudHVyeSBFbmdsYW5kIHRvIHRoZSBGcmVuY2ggY291bnRyeXNpZGUuICBZb3UgZW5qb3kgYSBnb29kIERhbWFzayBwYXR0ZXJuLCBhIFBlcnNpYW4gcnVnIGFuZCBzdGlsbC1saWZlIGFydHdvcmsuICBDcnlzdGFsIGNoYW5kZWxpZXJzIGFuZCBhbiBhYnVuZGFuY2Ugb2Ygb3JuYXRlIG9iamVjdHMgYXJlIGNhbGxpbmcgeW91ciBuYW1lLiAgWW91IGNhbiBzaG9wIHRoaXMgbG9vayBhdCBwbGFjZXMgbGlrZSBUaG9tYXN2aWxsZSBGdXJuaXR1cmUgYW5kIEFzaGxleSBGdXJuaXR1cmUuJ1xuXHRcdH0sXG5cdFx0e1xuXHRcdFx0aWQ6ICd3b3JsZGx5Jyxcblx0XHRcdGRlc2M6ICdTb21lIG1heSBjYWxsIHlvdSBhIGdsb2JldHJvdHRlciBvciBjbGFpbSB0aGF0IHlvdSBoYXZlIHdhbmRlcmx1c3QuICBDb2xsZWN0aW5nIHVuaXF1ZSBhcnRpZmFjdHMgYW5kIGZ1cm5pc2hpbmdzIGZyb20geW91ciB0cmF2ZWxzIG1ha2VzIHlvdSBzbyBoYXBweS4gIEVhY2ggdGltZSB5b3UgbG9vayBhdCB0aG9zZSBvYmplY3RzLCB5b3UgcmVmbGVjdCB1cG9uIHlvdXIgZXhwZXJpZW5jZXMgZnJvbSB0aGF0IGRlc3RpbmF0aW9uLiAgVGhlIHdvcmxkIGlzIHlvdXIgb3lzdGVyIG9yIGluIHRoaXMgY2FzZeKApnlvdXIgZ28gdG8gbWFya2V0cGxhY2UhICBHZXQgb3V0IHRoZXJlIGFuZCBzaG9wISdcblx0XHR9XG5cdF1cblxuICAgIHJldHVybiB7XG4gICAgICBsaXN0OiAoKSA9PiB7XG4gICAgICAgIHJldHVybiBxdWVzdGlvbnM7XG5cdCAgfSxcblx0ICBhbnN3ZXJzOiAoKSA9PiB7XG5cdFx0cmV0dXJuIGFuc3dlcnM7XG5cdCAgfVxuICAgIH1cblxufSk7XG4iLCJhbmd1bGFyLm1vZHVsZSgnc3R5bGUtcXVpeicsIFsnc3R5bGUtcXVpei5jb250cm9sbGVyJywgJ3N0eWxlLXF1aXouZmFjdG9yeSddKTtcbiJdfQ==
